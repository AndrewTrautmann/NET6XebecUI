@page "/applicationform"
@inject HttpClient httpClient
@using Models 

<style>
    .app-form-wrapper {
        margin-left: 20%;
        width: 60%;
        min-height: 80vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .applicationModel-form {
        width: 550px;
        height: 500px;
        background-color: #f2f2f2;
        border-radius: 5px;
        border: 2px solid grey;
    }
    .applicationModel-form-title{
        width:100%;
        height: 10%;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 5px;
        font-size: 20px;
    }
    .applicationModel-form-question-area {
        width: 100%;
        height: 75%;
        overflow-y: auto;
    }
    .applicationModel-form-button{
        width: 100%;
        height: 15%;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .applicationModel-form-question{
        max-width: 90%;
        align-items: center;
        justify-content: center;
        margin-left: 10px;
        word-wrap: break-word;
    }
</style>


<div class="app-form-wrapper">
    <div class="applicationModel-form">
        <div class="applicationModel-form-title">
            ApplicationModel Form
        </div>
        <div class="applicationModel-form-question-area">
            <table class="table">
                <tbody>
                    @if(ApplicantAnswers != null)
                    {
                        @foreach(var customquestion in ApplicantAnswers)
                        {
                        <tr>
                            <td>
                                <div class="applicationModel-form-question">
                                    <h6 class="form-text text-muted" style="font-size: 14px; width: 90%;">@customquestion.HRQuestion</h6>
                                    @switch (customquestion.TypeId)
                                    {
                                        case 1:
                                            <input type="number" class="form-control" style="width: 80%" @bind="customquestion.Applicantanswer">
                                            break;
                                        case 2:
                                            <textarea type="text" class="form-control" placeholder="Answer..." style="width: 80%" @bind="customquestion.Applicantanswer"></textarea>
                                            break;
                                        case 3:
                                            <input type="text" class="form-control" placeholder="Answer..." style="width: 80%" @bind="customquestion.Applicantanswer">
                                            break;
                                        case 4:
                                        <input type="date" id="test" class="form-control" style="width: 80%" @onchange="(e) => { customquestion.Applicantanswer = e.Value.ToString(); }">
                                            break;
                                        case 5:
                                            <select @bind="customquestion.Applicantanswer">
                                                <option value="yes">Yes</option>
                                                <option value="no">No</option>
                                            </select>
                                            break;
                                        case 6:
                                            <input type="file" class="form-control" style="width: 80%" @bind="customquestion.Applicantanswer">
                                            break;
                                    }
                                </div>
                            </td>
                        </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="applicationModel-form-button">
            <button class="btn" style="color: white; background-color: #00BCAE" @onclick="SaveAnswers">Submit</button>
        </div>
    </div>
</div>

@code {

    List<Job> Jobs = null;
    List<QuestionType> Types = null;
    int CurrentJobId = 0;
    int CurrentAppUser = 6;

    List<FormQuestion> QuestionList = new List<FormQuestion>();
    List<ApplicantQuestion> ApplicantAnswers = new List<ApplicantQuestion>();
    List<ApplicantAnswer> AnswerList = new List<ApplicantAnswer>();


    protected override async Task OnInitializedAsync()
    {
        Jobs = await httpClient.GetFromJsonAsync<List<Job>>("https://xebecapi.azurewebsites.net/api/job");
        Job tempJob = Jobs.LastOrDefault<Job>();

        Types = await httpClient.GetFromJsonAsync<List<QuestionType>>("https://xebecapi.azurewebsites.net/api/jobtype");

        CurrentJobId = tempJob.Id;

        //QuestionList = await httpClient.GetFromJsonAsync<List<FormQuestion>>($"https://xebecapi.azurewebsites.net/api/questionnairehrform/HR/{CurrentJobId}");
        QuestionList = await httpClient.GetFromJsonAsync<List<FormQuestion>>($"https://xebecapi.azurewebsites.net/api/questionnaire/job/{CurrentJobId}");


        foreach (var q in QuestionList)
        {
            ApplicantQuestion tempAppQuuestion = new ApplicantQuestion();
            tempAppQuuestion.HRQuestion = q.question;
            tempAppQuuestion.HRQuestionId = q.id;
            tempAppQuuestion.TypeId = q.answerTypeId;

            ApplicantAnswers.Add(tempAppQuuestion);
        }
    }

    public async Task SaveAnswers()
    {
        foreach(var q in ApplicantAnswers)
        {
            ApplicantAnswer tempAnswer = new ApplicantAnswer();
            tempAnswer.applicantAnswer = q.Applicantanswer;
            tempAnswer.questionnaireHRFormId = q.HRQuestionId;
            tempAnswer.appUserId = CurrentAppUser;

            AnswerList.Add(tempAnswer);
        }

        await httpClient.PostAsJsonAsync<List<ApplicantAnswer>>("https://xebecapi.azurewebsites.net/api/customquestionforapplicants/list", AnswerList);
    }
}
