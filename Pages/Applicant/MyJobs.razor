@page "/myjobs"
@using XebecPortal.UI.Services.Models
@inject HttpClient httpClient
@inject HrJobState hrJobState
<style>
    .main {
        overflow: hidden;
        font-family: opensans-condensed-bold;
    }

    .main-wrapper {
        background: transparent;
        width: 100%;
        min-height: 100%;
        padding: 0 5%;
        /*display: grid;
        grid-template-columns: 1fr 1fr 1.2fr 1.5fr;
        grid-template-rows: 10% auto;
        grid-gap: 10px;
        max-height: 100%;
        padding: 20px 10% 0 10%;*/
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 30px;
    }

    .search-panel, .heading, .line {
        grid-column: span 4;
        background: rgba(255,255,255,0.7);
        box-shadow: rgba(0, 0, 0, 0.1) 0 10px 15px -3px, rgba(0, 0, 0, 0.05) 0 4px 6px -2px;
    }

    .line {
        background: black;
    }

    .main-wrapper-child {
        border-radius: 10px;
        /* background: rgba(167,169,171,0.22);*/
        padding-top: 10px;
    }

    .job-cards {
        /* display: grid;
        grid-template-columns: repeat(2, fr);
        align-content: start;*/
        /*grid-template-columns: repeat(@@maxJobs, 1fr);*/
        background: rgba(0, 188, 174,0.1);
        height: 75vh;
        gap: 10px;
        padding: 5px;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        width: 100%;
        scrollbar-track-color: white;
    }

        .job-cards::-webkit-scrollbar-track {
            background: linear-gradient(#a7a9ab 0%, rgba(0,51,64,0.09) 30%);
            border-radius: 10px;
            transform: translateX(10vw);
        }

        .job-cards::-webkit-scrollbar {
            width: 10px;
            background-color: rgba(0, 188, 174,0.6);
        }

        .job-cards::-webkit-scrollbar-thumb {
            background: linear-gradient(transparent 30%, #fff 30%);
            width: 10px;
            height: 10px;
        }

        .job-cards div {
            /*border: #003340 3px solid;*/
            border: none;
            border-left: rgba(0, 188, 174,0.7) 10px solid;
            border-radius: 10px;
            background: rgba(255,255,255,0.9);
            margin: 0 5px 0 3px;
        }

            .job-cards div:first-child {
                background: rgba(0, 188, 174,1);
                border-radius: 5px;
                margin: 0;
                font-weight: 700;
                box-shadow: rgba(0, 0, 0, 0.45) 0px 25px 20px -20px !important;
            }

            .job-cards div.rejection {
                border-left: #ff4d5a 10px solid;
                box-shadow: rgba(253,139,151,0.3) 0px 2px 2px, rgba(253,139,151,0.01) 0px 15px 12px;
            }

        .job-cards .accepted {
            border-left: rgba(0, 188, 80, 1) 10px solid;
            box-shadow: rgba(253,139,151,0.3) 0px 2px 2px, rgba(253,139,151,0.01) 0px 15px 12px;
        }

        .job-cards div:first-child.rejection-heading {
            background: #ff4d5a;
            border: none !important;
        }

        .job-cards div:first-child.accepted-heading {
            background: rgba(0, 188, 80, 1);
            border: none !important;
        }

    .card-header {
        position: sticky;
        top: -5px;
        box-sizing: border-box;
        height: fit-content;
        transition: 0.3s fade;
        /*box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;*/
    }

        .card-header .rejection-heading {
        }

    .job-card {
        /*display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(4, fit-content());
        grid-row-gap: 0;*/
        display: flex;
        flex-direction: column;
        height: fit-content;
        box-shadow: rgba(0, 188, 174,0.3) 0px 2px 2px, rgba(0, 188, 174,0.22) 0px 15px 12px;
    }

    .position, .company {
        grid-column: span 2;
    }
    /* text and input: sizes and content placement*/
    .heading {
        width: fit-content;
        height: fit-content;
        justify-self: start;
        padding: 0 5%;
    }

        .heading h1 {
            color: #2d1c13;
            text-align: left;
            font-size: 3vw;
            font-weight: 900;
        }

        .heading small {
            color: rgba(0,0,0,0.39);
            text-transform: uppercase;
            font-size: 0.5vw;
        }



    .card-header {
        font-size: 20px;
        text-align: center;
        color: white;
        margin-bottom: 3vh;
        width: 100%;
        height: 35px;
    }

    .job-card {
        padding: 3px 5px;
    }

        .position, .company, .job-card small {
            text-overflow: ellipsis;
            word-wrap: break-word;
            display: block;
        }

    .position {
        font-size: 1.3vw;
        font-weight: 700;
    }

    .company {
        font-size: 1vw;
        font-weight: 500;
    }

    .job-card small {
        font-size: 0.6vw;
    }

    .addition-details {
        margin-left: 3px;
    }

    .left-text {
        text-align: end;
        margin-right: 5px;
    }


    .phase-pill, .rejection-phase {
        border-radius: 999px;
        box-sizing: border-box;
        cursor: pointer;
        width: fit-content;
        word-break: break-word;
        border: 0;
    }

    .rejection-phase {
        color: rgba(188, 0, 14, 1);
        background: rgba(188, 0, 14, 0.33);
        font-size: 1vh;
        font-weight: 700;
        opacity: 1;
        padding: 0.2vh 1vh;
    }

    .phase-pill {
        background: rgba(94,93,240,0.22);
        color: rgb(94,93,240);
        font-size: 1.5vh;
        font-weight: 700;
        opacity: 1;
        padding: 0.2vh 1vh;
    }

    .count {
        text-decoration: none;
        border-radius: 1em;
        font-size: 1em;
    }

    .job-search-bar-input {
        /*width: 100%;
        background-color: rgba(255,255,255,1) !important;
        border-radius: 2em;
        border: 0.1em solid rgba(0,0,0,0.2);*/
        /* background-color: white;
        height: 5vh;
        width: 50%;
        box-shadow: 0 2px 5px 0 rgb(0 0 0 / 20%), 0 2px 10px 0 rgb(0 0 0 / 20%);
        border: white solid 0.1em;
        border-radius:1em;
        margin-top:10px;*/
        background-color: white;
        height: 5vh;
        width: 100%;
        box-shadow: 0 2px 5px 0 rgba(0,0,0,0.2), 0 2px 10px 0 rgba(0,0,0,0.2);
        border: white solid 0.1em;
        border-radius: 1em;
    }

    .search-bar {
        width: 50%;
        height: 5vh;
        margin-top: 3vh;
        margin-left: 30%;
        margin-right: 30%;
        border: none;
    }
</style>
@if (jobs != null)

{
    <div class="row d-flex justify-content-center" style="height:5vh; margin-bottom:20px; width:100%;">
        <div class="search-bar">
            <div class="input-group d-flex justify-content-center form-group">

                <input class="job-search-bar-input" style="max-width: 50%" type="text" placeholder="Search" value="@_keyword" @oninput="@OnKeywordChanged" />
            </div>
        </div>
        <span></span>
    </div>
    <div class="main-wrapper">
        <!--Search-Box-->
        
        <div class="main-wrapper-child job-cards">
            <div class="card-header d-flex align-content-center justify-content-center ">
                <span>Application</span>
            </div>
            @foreach (var job in jobs)
            {
                <div class="job-card">
                    <span class="position">@job.Title</span>
                    <span class="company">@job.Company</span>
                    <small class="addition-details text-muted">@job.Location</small>
                    <small class="phase left-text">
                        @*<span class="phase-pill" style="@(GetColor(job.Phase))">@application.Phase</span>*@
                    </small>
                    <small class="addition-details text-muted">Date Advertised: @job.CreationDate</small>
                    @*<small class="addition-details left-text text-muted">ApplicationModel Date : @application.ApplicationDate</small>*@
                </div>
            }
        </div>
        <div class="main-wrapper-child job-cards">
            <div class="card-header  d-flex align-content-center justify-content-center">
                <span>In Progress</span>
            </div>
            @foreach (var application in _inProgress)
            {
                <div class="job-card">
                    <span class="position">@application.Position</span>
                    <span class="company">@application.Company</span>
                    <small class="addition-details text-muted">@application.Location</small>
                    <small class="phase left-text">
                        <span class="phase-pill" style="@(GetColor(application.Phase))">@application.Phase</span>
                    </small>
                    <small class="addition-details text-muted">Date Advertised: @application.LastMoved</small>
                    @*<small class="addition-details left-text text-muted">ApplicationModel Date : @application.ApplicationDate</small>*@
                </div>
            }
        </div>
        <div class="main-wrapper-child job-cards">
            <div class="card-header  d-flex align-content-center justify-content-center accepted-heading">
                <span class="count"> </span><span style="margin-left:5px;">Successful</span><p style="margin-left:5px;">Application</p>
            </div>
            @foreach (var application in _offers)
            {
                <div class="job-card accepted">
                    <span class="position">@application.Position</span>
                    <span class="company">@application.Company</span>
                    <small class="addition-details text-muted">@application.Location</small>
                    <small class="phase left-text">
                        <button class="phase-pill" style="@(GetColor(application.Phase))">@application.Phase</button>
                    </small>
                    <small class="addition-details text-muted">Date Advertised: @application.LastMoved</small>
                    @*<small class="addition-details left-text text-muted">ApplicationModel Date : @application.ApplicationDate</small>*@
                </div>
            }
        </div>
        <div class="main-wrapper-child job-cards rejection-card">
            <div class="card-header  d-flex align-content-center justify-content-center rejection-heading">
                <span class="count">@_rejections.Count</span><span style="margin-left:5px;">Unsuccessful</span><br><span style="margin-left:5px;">Application</span>
            </div>
            @foreach (var rejection in _rejections)
            {
                <div class="job-card rejection">
                    <span class="position">@rejection.Position</span>
                    <span class="company">@rejection.Company</span>
                    <small class="addition-details">@rejection.Location</small>
                    <small class="phase left-text">Last Phase : <button class="rejection-phase">@rejection.Phase</button></small>
                    <small class="addition-details">Date Advertised: @rejection.ApplicationDate</small>
                    <small class="addition-details left-text">Date Closed : @rejection.LastMoved</small>
                </div>
            }
        </div>
    </div>
}
else
{
    <button class="btn btn-primary" type="button" disabled>
        <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
        Getting Jobs....
    </button>
}

@code {

    private IList<AppUser> users = new List<AppUser>();
    private IList<ApplicationPhaseHelper> phasesHelpers = new List<ApplicationPhaseHelper>();
    private IList<ApplicationModel> applications = new List<ApplicationModel>();
    private IList<ApplicationPhase> phases = new List<ApplicationPhase>();
    private IList<Job> jobs = new List<Job>();

    protected override async Task OnInitializedAsync()
    {
        jobs = await httpClient.GetFromJsonAsync<List<Job>>("https://xebecapi.azurewebsites.net/api/Job");

        users = await httpClient.GetFromJsonAsync<List<AppUser>>("https://xebecapi.azurewebsites.net/api/user");
        phasesHelpers = await httpClient.GetFromJsonAsync<List<ApplicationPhaseHelper>>("https://xebecapi.azurewebsites.net/api/ApplicationPhaseHelper");
        applications = await httpClient.GetFromJsonAsync<List<ApplicationModel>>("https://xebecapi.azurewebsites.net/api/Application");
        phases = await httpClient.GetFromJsonAsync<List<ApplicationPhase>>("https://xebecapi.azurewebsites.net/api/ApplicationPhase");

    }
    private string FindCurrentPhase(int candidateId, int jobId)
    {
        int applicationId = applications.Where(x => x.JobId == jobId && x.AppUserId == candidateId).FirstOrDefault().Id;

        List<ApplicationPhaseHelper> phases_ = phasesHelpers.Where(x => x.ApplicationId == applicationId).ToList();
        phases_ = phases_.OrderByDescending(x => x.TimeMoved).ToList();

        ApplicationPhaseHelper currentPhase = phases_.FirstOrDefault();

        string phaseDescription = phases.Where(x => x.id == currentPhase.ApplicationPhaseId).FirstOrDefault().description;

        return phaseDescription;
    }




    //private string GetColor(string applicationPhase)
    //{
    //    string bg_colour;
    //    string text_colour;

    //if (Enum.GetName(ApplicationPhase.Application).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(9, 71, 111, 0.22)";
    //    text_colour = "rgba(9, 71, 111, 1)";
    //}
    //else if (Enum.GetName(ApplicationPhase.Testing).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(11, 28, 72, 0.22)";
    //    text_colour = "rgba(11, 28, 72, 1)";
    //}
    //else if (Enum.GetName(ApplicationPhase.InterviewStaff).Equals(applicationPhase, StringComparison.OrdinalIgnoreCase))
    //{
    //    bg_colour = "rgba(0, 155, 174, 0.22)";
    //    text_colour = "rgba(0, 155, 174, 1)";
    //}
    //// ReSharper disable once PossibleNullReferenceException
    //else if (Enum.GetName(ApplicationPhase.InterviewHR).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(131, 97, 67, 0.22)";
    //    text_colour = "rgba(131, 97, 67, 1)";
    //}
    //else if (Enum.GetName(ApplicationPhase.InterviewCEO).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(224, 213, 204, 0.22)";
    //    text_colour = "rgba(131, 97, 67, 1)";
    //}
    //else if (Enum.GetName(ApplicationPhase.Offer).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(0, 188, 80, 0.22)";
    //    text_colour = "rgba(0, 188, 80, 1)";
    //}
    //else if (Enum.GetName(ApplicationPhase.Screening).Equals(applicationPhase))
    //{
    //    bg_colour = "rgba(0, 108, 188, 0.22)";
    //    text_colour = "rgba(0, 108, 188, 1)";
    //}
    //else
    //{
    //    bg_colour = "rgba(94,93,240,0.22)";
    //    text_colour = "rgba(94,93,240,1)";
    //}
    //return $"background: {bg_colour}; color: {text_colour}; box-shadow: {text_colour} 0 10px 20px -10px;";
}

}