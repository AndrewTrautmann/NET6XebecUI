@page "/applicantjobportal"
@inject NavigationManager navmanager
@inject HttpClient httpClient
@inject UserState state
@inject IJSRuntime jsRuntime

<style>
    .handPointer {
        cursor: pointer;
    }

    input.smallerCheckBox {
        width: 15px;
        height: 15px;
        margin: 2px;
    }

    ::-webkit-scrollbar {
        width: 10px;
    }

    ::-webkit-scrollbar-track {
        background: transparent;
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        background: #fff;
        border-radius: 5px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background: #00BCAE;
        }

    .hr-job-search-bar {
        width: 40%;
        height: 5vh;
        margin-bottom: 2.5vh;
        margin-top: 2.5vh;
        margin-left: 30%;
        margin-right: 30%;
        border: none;
    }

    .hr-job-filters {
        height: 5vh;
    }

    .job-search-icon {
        color: #00BCAE;
        font-size: 2em;
        text-align: center;
    }

    .job-search-icon-div {
        cursor: pointer;
        background-color: rgba(255,255,255,0.6);
        border-radius: 2em;
        width: 5%;
        text-align: center;
        border: 0.1em solid rgba(0,0,0,0.2);
    }

    .job-portal-card {
        cursor: pointer;
        background-color: rgba(255,255,255,1);
        border-radius: 20px;
        border: solid white 0.25em;
        box-shadow: rgba(9, 30, 66, 0.25) 0px 1px 1px, rgba(9, 30, 66, 0.13) 0px 0px 1px 1px;
    }

        .job-portal-card:hover {
            cursor: pointer;
            background-color: rgba(255,255,255,1);
            border: solid white 0.25em;
            box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;
            position: relative;
        }

    .job-portal-card-body {
        height: 20vh;
        margin-left: 1vh;
        margin-right: 1vh;
        margin-bottom: 1vh;
    }

    .headingPage {
        height: 5vh;
        color: #003340;
        font-size: 2rem;
    }

    .formButton {
        background-color: #00BCAE;
        color: white;
        font-weight: 600;
        height: 5vh;
        margin-top: 2vh;
        width: auto;
        font-family: opensans-bold;
    }

        .formButton:hover {
            background-color: #d35bc9;
            color: white;
            font-weight: 600;
            height: 5vh;
            margin-top: 2vh;
            width: auto;
            font-family: opensans-bold;
        }

    .my-container {
        height: 65vh;
        width: 100%;
    }

    .small-card-name {
        color: black;
        font-weight: 600;
        font-size: 1em;
        font-family: opensans-bold;
    }

    .small-card-company {
        color: rgba(0,0,0,0.5);
        font-weight: 600;
        font-size: 1em;
        font-family: opensans-bold;
    }

    .small-card-location {
        color: rgba(0,0,0,0.5);
        font-weight: 600;
        font-size: 1em;
        font-family: opensans-light;
    }

    .small-card-date {
        color: #d35bc9;
        font-weight: 800;
        font-size: 1em;
        font-family: opensans-bold;
    }

    .job-portal-right {
        background-color: rgba(255,255,255,1);
        border-radius: 20px;
        border: solid white 0.25em;
        box-shadow: rgba(0,51,64,0.86) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset, rgba(9, 30, 66, 0.25) 0px 1px 1px, rgba(9, 30, 66, 0.13) 0px 0px 1px 1px;
        margin-top: 1vh;
    }

    .job-portal-form {
        width: 90%;
        margin-left: 5%;
        margin-right: 5%;
    }

    .big-card-name {
        color: black;
        font-weight: 900;
        font-size: 2em;
        font-family: opensans-bold;
    }

    .big-card-description {
        color: #666666;
        font-weight: 800;
        font-size: 1em;
        font-family: opensans-condensed-light;
    }

    .big-card-type {
        color: black;
        font-weight: 800;
        font-size: 1em;
        font-family: opensans-bold;
    }

    li.active a {
        background: #00BCAE !important;
        color: white;
        border-color: #00BCAE !important;
    }

    .pagination {
        box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;
    }

    .job-portal-inner-container {
        width: 100%;
        height: 85vh;
    }

    .job-portal-inner-top {
        height: 5vh;
        margin-top: 2.5vh;
        margin-bottom: 2.5vh;
    }

    .job-portal-inner-bottom {
        height: 65vh;
        width: 100%;
    }

    .job-portal-nav-btn {
        height: 5vh;
        width: 100%;
        border-radius: 2em;
        border: none;
        color: white;
        background-color: #00BCAE;
        font-weight: 700;
        font-family: opensans-condensed-bold;
    }

    job-portal-nav-btn:hover {
        background-color: #d35bc9;
    }

    .hr-jobportal-mudselect {
        cursor: pointer;
        background-color: white;
        height: 7vh;
        font-size: 1.5em;
        font-weight: 800;
        font-family: opensans-condensed-bold;
        color: black;
        border-radius: 1em;
        padding-bottom: 5vh;
        padding-left: 4vh;
        box-shadow: 0 2px 5px 0 rgba(0,0,0,0.2), 0 2px 10px 0 rgba(0,0,0,0.2);
    }

        .hr-jobportal-mudselect:hover {
            border-radius: 1em;
            border: 0.1em solid black;
        }

    .hr-job-search-bar-input {
        background-color: white;
        height: 6vh;
        width: 100%;
        box-shadow: 0 2px 5px 0 rgba(0,0,0,0.2), 0 2px 10px 0 rgba(0,0,0,0.2);
        border: white solid 0.1em;
        border-radius: 1em;
    }

        .hr-job-search-bar-input::placeholder {
            color: #666666;
            /*font-weight: 900;
            font-size: 0.8em;
            padding-left: 1em;
            padding-top: 1em;*/
            font-family: opensans-condensed-bold;
        }

        .hr-job-search-bar-input:hover {
            border-radius: 1em;
            border: 0.1em solid black;
        }

    .hr-job-name {
        height: 5vh;
        line-height: 5vh;
        font-weight: 800;
        font-size: 2em;
        color: #00BCAE;
        font-family: opensans-condensed-light;
        text-align: center;
    }

    .applicant-application-form {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .applicant-application-form-button {
        margin-top: 10px;
        margin-bottom: 10px;
        width: 50%;
        display: flex;
        justify-content: space-between;
    }


    .applicant-application-form-questions {
        display: flex;
        justify-content: center;
        height: 60vh;
        overflow-y: auto;
    }

        .applicant-application-form-questions td {
            width: 300px;
        }

    .applicant-application-form-container {
        background: #fff;
        width: 30%;
        display: flex;
        align-items: center;
        flex-direction: column;
        border-radius: 10px;
        border: 1px solid rgba(0,0,0,0.5);
    }

    .applicant-appform-button {
        width: 90px;
        border-radius: 10px;
        background: #00BCAE;
        color: #fff;
    }

    .appform-submit-modal {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }



</style>

<div class="container" style="height: 55vh;" hidden="@jobPortalIsHidden">
    <!--Search-Box-->
    <div style="height: 15vh">
        <div class="hr-job-search-bar">
            <input class="form-control rounded-pill hr-job-search-bar-input" type="text" placeholder="Search For Jobs" @oninput="SearchListJob" />
        </div>
        <div class="row hr-job-filters">
            <div class="col-3">
                <!--Location-->
                <MudSelect T="string" Class="form-control hr-jobportal-mudselect rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Locations" MultiSelection="true" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextLocation)" Label="Location" SelectedValuesChanged="SearchListLocation">
                    @if (jobListFilter != null && jobListFilter.Count > 0)
                    {
                        @foreach (var item in jobList.Select(x => x.Location).OrderBy(x => x).Distinct())
                        {
                            <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                        }
                    }
                </MudSelect>
            </div>
            <div class="col-3">
                <!--Company-->
                <MudSelect T="string" Class="form-control hr-jobportal-mudselect rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Companies" MultiSelection="true" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextCompany)" Label="Company" SelectedValuesChanged="SearchListCompany">
                    @if (jobListFilter != null && jobListFilter.Count > 0)
                    {
                        @foreach (var item in jobList.Select(x => x.Company).OrderBy(x => x).Distinct())
                        {
                            <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                        }

                    }
                </MudSelect>
            </div>
            <div class="col-3">
                <!--Department-->
                <MudSelect T="string" Class="form-control hr-jobportal-mudselect rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Departments" MultiSelection="true" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextDepartment)" Label="Department" SelectedValuesChanged="SearchListDepartment">
                    @if (jobListFilter != null && jobListFilter.Count > 0)
                    {
                        @foreach (var item in jobList.Select(x => x.Department).OrderBy(x => x).Distinct())
                        {
                            <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                        }

                    }
                </MudSelect>
            </div>
            <div class="col-3">
                <!--Status-->
                <MudSelect T="string" Class="form-control hr-jobportal-mudselect rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Job Types" MultiSelection="true" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextJobType)" Label="Job Type" SelectedValuesChanged="SearchListJobType">
                    @if (jobListFilter != null && jobListFilter.Count > 0)
                    {
                        @foreach (var item in JobTypes.Select(x => x.Type))
                        {
                            <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                        }

                    }
                </MudSelect>
            </div>
        </div>
    </div>
    <br />

    @if (jobListFilter?.Any() == true)
    {
        <div class="row" style="height:55vh">
            <div id="small-cards" class="col-3 job-portal-left overflow-auto">

                <!--Card list for jobs-->
                <div class="col-12" style="height: 53vh! important; margin-top: 1vh">
                    @foreach (var item in jobPagedList)
                    {
                        <div class="card job-portal-card" @onclick="() => DisplayJobDetail(item.Id)" style="@GetStyling(item)">
                            <div class="card-body job-portal-card-body">
                                <h3 class="card-title small-card-name">@item.Title</h3>
                                <h5 class="card-subtitle text-muted small-card-company">@item.Company</h5>
                                <br />
                                <h5 class="card-text small-card-location">@item.Location</h5>
                                <h5 class="card-text small-card-date">Due Date: @item.DueDate.ToString("d MMMM yyyy")</h5>
                            </div>
                        </div>
                        <br />
                    }
                </div>
            </div>

            <div class="col-9 job-portal-right-main" style="height: 55vh">

                <!--The Form for applying a job-->
                <div>
                    <div class="col-12" style="height: 55vh !important; margin-top: 1vh">
                        <div class="col-12 job-portal-right">
                            <form class="job-portal-form">
                                <div class="row">
                                    <div class="col-6 p-2">
                                        <h3 class="big-card-name">@displayJobDetail.Title</h3>
                                    </div>
                                    <div class="col-6 p-2 d-flex justify-content-end">
                                        @if (candidates.Where(x => x.AppUserId == state.AppUserId && x.jobId == currentJob).FirstOrDefault() != null)
                                        {
                                            <p>You Have Applied For This Post</p>
                                        }
                                        else
                                        {
                                            <input type="button" class="btn formButton" value="Apply" @onclick="() => Apply(displayJobDetail.Id)" />
                                        }
                                    </div>
                                    <div class="col-6 p-2 d-flex justify-content-start">
                                        <h5 class="card-subtitle text-muted small-card-company">@displayJobDetail.Company</h5>
                                    </div>
                                    <div class="col-6 p-2 d-flex justify-content-end">
                                        <p class="card-text small-card-location">@displayJobDetail.Location</p>
                                    </div>
                                    <div class="col-6 p-2 justify-content-start">

                                        @if (displayJobDetail.JobTypes != null && displayJobDetail.JobTypes.Count > 0)
                                        {
                                            <p class="big-card-type">@GetJobType(displayJobDetail.Id)</p>
                                        }
                                    </div>
                                    <div class="col-6 p-2 d-flex justify-content-end">
                                        <p class="big-card-type"> @displayJobDetail.Department</p>
                                    </div>
                                    <div class="col-12 p-2">
                                        <p class="p-2 text-left overflow-auto border border-2" style="height: 12em">@displayJobDetail.Description</p>
                                    </div>
                                    <div class="col-6 p-2">
                                        @* <p>@displayJobDetail.JobPlatforms</p> *@
                                    </div>
                                    <div class="col-6 p-2 d-flex justify-content-end">
                                        <p class="small-card-date">Due Date: @displayJobDetail.DueDate.ToString("d MMMM yyyy")</p>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-3">
                <br />
                <br />
                <div class="col-12 d-flex justify-content-center">
                    <MudPagination Rectangular="true" Variant="Variant.Filled" Size="Size.Small" BoundaryCount="1" MiddleCount="2" Count="jobPagedList.PageCount" SelectedChanged="PageListNav" ShowNextButton="!nextButton" ShowPreviousButton="!preButton" />
                </div>
            </div>
        </div>
    }
    else if (jobListFilter?.Any() == false && isFilterContainAnyVal)
    {
        @for (int i = 0; i < 5; i++)
        {
            <br />
        }
        <h1 class="text-center align-middle">No jobs are available</h1>
    }
    else
    {
        @for (int i = 0; i < 5; i++)
        {
            <br />
        }
        <div class="row">
            <div class="col-12 d-flex justify-content-center">
                <MudProgressCircular Color="Color.Primary" Style="height:140px;width:140px;" Indeterminate="true" />
            </div>
        </div>
    }
</div>
<div class="applicant-application-form" hidden="@applicationFormIsHidden">
    <div class="applicant-application-form-container">
        <div class="applicant-application-form-title">
            <h4 class="collaborators-heading-text">Application Form</h4>
        </div>
        <div class="applicant-application-form-questions">
            <table>
                <tbody>
                    @if (ApplicantAnswers != null)
                    {
                        @foreach (var customquestion in ApplicantAnswers)
                        {
                            <tr class="appform-right-row">
                                <td class="collaborators-left-td">
                                    <div class="application-form-question">
                                        <h6 class="appform-text" style="word-wrap: break-word">@customquestion.HRQuestion</h6>
                                        @switch (customquestion.TypeId)
                                        {
                                            case 1:
                                                <input type="number" class="form-control" @bind="customquestion.Applicantanswer">
                                                break;
                                            case 2:
                                                <textarea type="text" class="form-control" placeholder="Answer..." @bind="customquestion.Applicantanswer"></textarea>
                                                break;
                                            case 3:
                                                <input type="text" class="form-control" placeholder="Answer..." @bind="customquestion.Applicantanswer">
                                                break;
                                            case 4:
                                                <input type="date" id="test" class="form-control" @onchange="(e) => { customquestion.Applicantanswer = e.Value.ToString(); }">
                                                break;
                                            case 5:
                                                <select @bind="customquestion.Applicantanswer">
                                                    <option value="yes">Yes</option>
                                                    <option value="no">No</option>
                                                </select>
                                                break;
                                            case 6:
                                                <input type="file" class="form-control" @bind="customquestion.Applicantanswer">
                                                break;
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="applicant-application-form-button">
            <button class="btn applicant-appform-button" @onclick="ToJobPortal">Job Portal</button>
            <button class="btn applicant-appform-button" @onclick="SaveAnswers">Submit</button>
        </div>
    </div>
</div>

@if (submitModal)
{
    <div class="appform-submit-modal">
        <MudProgressCircular Class="loading-icon" Size="Size.Large" Indeterminate="true" />
    </div>
}


@{
    isFilterContainAnyVal = !string.IsNullOrEmpty(searchJob) || mudSelectLocation?.Any() == true || mudSelectCompany?.Any() == true || mudSelectDepartment?.Any() == true || mudSelectJobType?.Any() == true;
}

@code {

}