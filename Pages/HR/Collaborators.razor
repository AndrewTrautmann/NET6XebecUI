@inject HttpClient HttpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager nav

<style>
    .collaborators-container {
        height: 55vh;
        width: 50%;
        margin-left: 25%;
        margin-right: 25%;
        background-color: rgba(255,255,255,1);
        border: solid white 0.1em;
        box-shadow: 0 2px 5px 0 rgba(0,0,0, 0.2), 0 2px 10px 0 rgba(0,0,0,0.1);
        display:flex;
    }
    .collaborators-left{
        height: 55vh;
        width: 50%;
    }
    .collaborators-right {
        height: 55vh;
        width: 50%;
        border-left: black 0.1em solid;
    }
    .collaborators-heading{
        height: 5vh;
        margin-top: 2.5vh;
        margin-bottom: 2.5vh;
        width: 100%;
        text-align: center;
    }
    .collaborators-heading-text {
        font-family: opensans-condensed-bold;
        font-weight: 800;
        font-size: 1.5em;
        color: #00bcae;
    }
   
    .collaborators-left-main {
        height: 40vh;
        overflow-y: auto;
        width: 100%;
        margin-bottom: 5vh;
    }
        .collaborators-left-main::-webkit-scrollbar {
            background-color: transparent;
            border-radius: 1em;
            width: 1vw;
        }

        .collaborators-left-main::-webkit-scrollbar-thumb {
            background-color: white;
            border-radius: 1em;
        }

    .collaborators-left-table {
        height: 40vh;
        width: 80%;    
        margin-left: 10%;
        margin-right: 10%;
    }
    .collaborators-left-row {
        box-shadow: 0 2px 5px 0 rgba(0,0,0, 0.4), 0 2px 10px 0 rgba(0,0,0,0.4);
        height: 8vh;
        color: black;
        font-family: opensans-condensed-bold;
        font-weight: 900;
        font-size: 1em;
        width: 100%;
        margin-bottom: 5px;
        background-color: rgba(255,255,255,1);
    }
        .collaborators-left-row:hover {
            box-shadow: 0 2px 5px 0 rgba(0,0,0,1), 0 2px 10px 0 rgba(0,0,0,1);
            height: 8vh;
            color: white;
            font-family: opensans-condensed-bold;
            font-weight: 900;
            font-size: 1em;
            margin-bottom: 5px;
            background-color: black;
        }
    
    .collaborators-left-td{
        padding-left: 10px;
    }
</style>
<!--Tables of developers/HR-->
<div class="collaborators-container">
    <div class="collaborators-left">
        <div class="collaborators-heading">
            <h2 class="collaborators-heading-text">Select Collaborators</h2>
        </div>
        <div class="appform-left-main">
            <table class="collaborators-left-table">

                @foreach (var developer in developers)
                {
                    <tr class="collaborators-left-row">
                        <td class="collaborators-left-td" @onclick='() =>AddCollaborator(developer)'>@developer.Role</td>
                    </tr>
                }

            </table>
        </div>     
    </div>
    <div class="collaborators-right">
        <div class="collaborators-heading">
            <h2 class="collaborators-heading-text">Chosen Collaborators</h2>
        </div>
        <div class="collaborators-left-main">
            <table class="collaborators-left-table">
                @foreach (var developer in developersAdded)
                {
                    <tr class="collaborators-left-row">
                        <td class="collaborators-left-td">@developer.Role</td>
                        <td class="collaborators-left-td" @onclick='() => RemoveCollaborator(developer)'>&times;</td>
                    </tr>

                }
            </table>
        </div>
        
    </div>
</div>

@code {

    private List<Developer> developers = new List<Developer>();
    private List<Developer> developersAdded = new List<Developer>();

    protected override async Task OnInitializedAsync()
    {
        developers = await HttpClient.GetFromJsonAsync<List<Developer>>("https://my-json-server.typicode.com/WilsonToffie/JSONTesting/Developers");
    }

    private void AddCollaborator(Developer developer)
    {
        if (!developersAdded.Contains(developer))
        {
            developersAdded.Add(developer);
        }
    }

    private void RemoveCollaborator(Developer developer)
    {
        developersAdded.Remove(developer);
    }
}
