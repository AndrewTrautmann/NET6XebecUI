@using Bogus
@using XebecPortal.UI.Services.Models
@using System.Text
@inject HttpClient HttpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager nav

<style>
    .collaborators-container {
        height: 55vh;
        width: 50%;
        margin-left: 25%;
        margin-right: 25%;
        background-color: rgba(255,255,255,1);
        border: solid white 0.1em;
        box-shadow: 0 2px 5px 0 rgba(0,0,0, 0.2), 0 2px 10px 0 rgba(0,0,0,0.1);
        display:flex;
    }
    .collaborators-left{
        height: 55vh;
        width: 50%;
    }
    .collaborators-right {
        height: 55vh;
        width: 50%;
        border-left: black 0.1em solid;
    }
    .collaborators-heading{
        height: 5vh;
        margin-top: 2.5vh;
        margin-bottom: 2.5vh;
        width: 100%;
        text-align: center;
    }
    .collaborators-heading-text {
        font-family: opensans-condensed-bold;
        font-weight: 800;
        font-size: 1.5em;
        color: #00bcae;
    }
   
    .collaborators-left-main {
        height: 40vh;
        overflow-y: auto;
        width: 100%;
        margin-bottom: 5vh;
    }
        .collaborators-left-main::-webkit-scrollbar {
            background-color: transparent;
            border-radius: 1em;
            width: 1vw;
        }

        .collaborators-left-main::-webkit-scrollbar-thumb {
            background-color: white;
            border-radius: 1em;
        }

    .collaborators-left-table {
        height: 40vh;
        width: 80%;    
        margin-left: 10%;
        margin-right: 10%;
    }
    .collaborators-left-row {
        box-shadow: 0 2px 5px 0 rgba(0,0,0, 0.4), 0 2px 10px 0 rgba(0,0,0,0.4);
        height: 8vh;
        color: black;
        font-family: opensans-condensed-bold;
        font-weight: 900;
        font-size: 1em;
        width: 100%;
        margin-bottom: 5px;
        background-color: rgba(255,255,255,1);
    }
        .collaborators-left-row:hover {
            box-shadow: 0 2px 5px 0 rgba(0,0,0,1), 0 2px 10px 0 rgba(0,0,0,1);
            height: 8vh;
            color: white;
            font-family: opensans-condensed-bold;
            font-weight: 900;
            font-size: 1em;
            margin-bottom: 5px;
            background-color: black;
        }
   
    .appform-container {
            height: 55vh;
            width: 70%;
            margin-left: 15%;
            margin-right: 15%;
            background-color: rgba(255,255,255,1);
            border: solid white 0.1em;
            box-shadow: 0 2px 5px 0 rgba(0,0,0, 0.2), 0 2px 10px 0 rgba(0,0,0,0.1);
            display: flex;
        }
        .appform-left-buttons{
            margin-top: 5vh;
            height: 5vh;
            width:100%;
        }
        .appform-left-main {
            height: 35vh;
            overflow-y: auto;
            overflow-x: hidden;
            width: 100%;
            padding: 5px;
        }
        .appform-left-main::-webkit-scrollbar {
            background-color: transparent;
            border-radius: 1em;
            width: 1vw;
        }
    
        .appform-left-main::-webkit-scrollbar-thumb {
            background-color: white;
            border-radius: 1em;
        }
        .appform-left-row {
            box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px, rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
            border-radius: 20px !important;
            min-height: 5vh;
            color: black;
            font-family: opensans-condensed-bold;
            font-weight: 900;
            font-size: 1em;
            min-width: 100%;
            margin-bottom: 5px;
            background-color: rgba(255,255,255,1);
            padding: 5px !important;
        }
        .appform-left-row-selected{
                    border-radius: 20px !important;
                    min-height: 9vh;
                    color:#00bcae; !important;
                    font-family: opensans-condensed-bold;
                    font-weight: 900;
                    font-size: 1em;
                    margin-bottom: 5px;
                    background-color: rgb(243,242,242);
                    min-width: 100%;
                    transition: 0.1s;
                    padding: 5px !important;
        }
            .appform-left-row:hover {
                box-shadow: 0 2px 5px 0 rgba(0,0,0,1), 0 2px 10px 0 rgba(0,0,0,1);
                min-height: 9vh;
                color: white;
                font-family: opensans-condensed-bold;
                font-weight: 900;
                font-size: 1em;
                margin-bottom: 5px;
                background-color: rgb(243,242,242);
                min-width: 100%;
                transition: 0.1s;
            }
        .appform-right-row {
            box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px, rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
            border-radius: 10px !important;
            min-height: 7vh;
            min-width: 100%;
            margin-bottom: 5px;
            background-color: rgba(255,255,255,1);
        }
    
        .appform-text {
            color: black;
            font-family: opensans-condensed-bold;
            font-weight: 900;
            font-size: 1em;
            margin:0;
            padding: 0;
            width: 90%;
        }
        .question-select {
            width: 500px;
            height: 500px;
            background-color: #f2f2f2;
            border-radius: 5px;
            border: 2px solid grey;
        }
    
        .question-button {
            width: 80%;
            margin-left: 10%;
            height: 15%;
            display: flex;
            justify-content: space-evenly;
            align-items: center;
        }
    
        .form-questions {
            height: 75%;
            overflow: auto;
        }
    
        .form-button {
            height: 15%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    
        .add-popup {
            position: absolute;
            margin: 0 auto;
            top: 18%;
            width: 500px;
            height: 350px;
            background-color: #f2f2f2;
            border: 2px solid black;
            border-radius: 5px;
            animation-name: fade-in;
            animation-duration: 0.3s;
        }
    
        .delete-popup {
            position: absolute;
            margin: 0 auto;
            top: 18%;
            width: 500px;
            height: 450px;
            background-color: #f2f2f2;
            border: 2px solid black;
            border-radius: 5px;
            animation-name: fade-in;
            animation-duration: 0.3s;
        }
    
        .add-popup-header {
            width: 100%;
            height: 15%;
            display: flex;
            align-items: center;
        }
    
        .add-popup-body {
            width: 100%;
            height: 60%;
            display: flex;
            justify-content: center;
        }
    
        .add-popup-type {
            width: 100%;
            height: 10%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    
        .add-popup-button {
            width: 100%;
            height: 15%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    
        .delete-popup-header {
            width: 100%;
            height: 10%;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }
    
        .delete-popup-body {
            width: 100%;
            height: 90%;
            display: flex;
            justify-content: center;
            overflow-y: scroll;
            background-color: white;
        }
    
        .delete-popup-question {
            word-wrap: break-word;
            width: 450px;
        }
        .appform-close-button{
            width: 10%;
            text-align: end;
        }
        .form-preview-question {
            width: 100%;
            display: flex;
            height: 50%;
        }
        .form-preview-input {
            width: calc(100% - 10px);
            margin: 0;
            padding: 0;
            height: 50%;
        }
        @@keyframes fade-in {
            from {
                opacity: 0;
                top: 10%
            }
    
            to {
                opacity: 1;
                top: 18%
            }
        }
        .appform-main-button {
            height: 5vh;
            background-color: #00bcae;
            border: none;
            border-radius: 100px;
            color: white;
            text-align: center;
            font-family: opensans-bold;
            font-weight: 700;
            
        }
    
        .appform-main-button:hover {
            height: 5vh;
            background-color: #d35bc9;
            border: none;
            border-radius: 100px;
            color: white;
            text-align: center;
            font-family: opensans-bold;
            font-weight: 700;
        }
    .collaborators-left-main{
        padding: 10px;
    }
    .developer-profile-picture img {
         height: 50%;
         width: 50%;
         border-radius: 50%;
         box-shadow: rgba(6, 24, 44, 0.4) 0 0 0 2px, rgba(6, 24, 44, 0.65) 0 4px 6px -1px, rgba(255, 255, 255, 0.08) 0 1px 0 inset;
         position: relative;
         transform: translateX(5px);
     }
</style>
<!--Tables of developers/HR-->
<div class="appform-container">
    <div class="collaborators-left">
        <div class="collaborators-heading">
            <h2 class="collaborators-heading-text">Select Collaborators</h2>
        </div>
        <div class="appform-left-main">
            <table class="collaborators-left-table">

                @if (collaborators == null)
                {
                    <div>Loading...</div>
                }
                else
                {
                    <tbody>
                    @if (collaborators != null)
                    {
                        for (var index = 0; index < collaborators.Count; index++)
                        {
                            var collaborator = collaborators[index];
                    
                            string avatar = avatars.FirstOrDefault(i => i.Id == index).Avatar;
                            <tr class="@DeveloperCardClass(collaborator) pl-2" @onclick="() => AddCollaborator(collaborator)">
                                
                                <td class="developer-profile-picture col-2 ml-2">
                                    <span style="max-width: 10px !important;min-width: 10px !important;"> </span>
                                    <img src="@avatar" alt="Avatar">
                                </td>
                                <td class="collaborators-left-td col-5">@collaborator.name @collaborator.surname</td>
                            </tr>
                        }
                    }
                    </tbody>
                }

            </table>
        </div>     
    </div>
    <div class="collaborators-right">
        <div class="collaborators-heading">
            <h2 class="collaborators-heading-text">Chosen Collaborators</h2>
        </div>
        <div class="collaborators-left-main">
            @if (collaboratorsAdded != null && collaboratorsAdded.Count > 0)
            {          
                    <a href="mailto:@collaboratorsAdded[0].email?subject=Recruit Team Assignment&cc=@GetCC(collaboratorsAdded)&body=@GetBody(collaboratorsAdded)!" class="btn btn-info mb-3">Email Team|<i class="fas fa-paper-plane"></i></a>
            }
            <table class="collaborators-left-table">
                <tbody>
                @if (collaboratorsAdded != null)
                {
                    foreach (var developer in collaboratorsAdded)
                    {
                        <tr class="appform-right-row">
                            <td class="collaborators-left-td">
                                <div class="form-preview-question">
                                    <h3 class="appform-text">@developer.name @developer.surname</h3>
                                    <button class="btn-close appform-close-button" @onclick="() => RemoveCollaborator(developer)"></button>
                                </div>
                                <div class="form-preview-input">
                                    <p type="email" class="form-control" style="width: 100%">
                                        <a href="mailto:@(developer.email)?subject=Recruit Team Assignment&body=@GetBody(developer)!">@developer.email</a>
                                    </p>
                                    
                                </div>
                            </td>
                        </tr>
                    }

                }
                </tbody>
            </table>

        </div>
        
    </div>
</div>
<input type="button" value="Save" class="createjob-bottom-main-button" @onclick="Save"/>

@code {
    [Parameter]
    public CreateJobPost TempJob { get; set; }
    [Parameter]
    public EventCallback<CreateJobPost> TempJobChanged { get; set; }


    private List<AppUser> collaborators = new List<AppUser>();
    private List<AppUser> collaboratorsAdded = new List<AppUser>();
    private List<Applicant> avatars = new();

    protected override async Task OnInitializedAsync()
    {
        collaborators = await HttpClient.GetFromJsonAsync<List<AppUser>>("https://xebecapi.azurewebsites.net/api/user");
        
        if (collaborators != null)
        {
            var f = new Faker<Applicant>()
                .RuleFor(a => a.Id, faker => faker.IndexFaker)
                    .RuleFor(a => a.Avatar, faker => faker.Person.Avatar);
            avatars = f.Generate(collaborators.Count);
        }
    }

    private void AddCollaborator(AppUser collaborator)
    {
        if (!collaboratorsAdded.Contains(collaborator))
        {
            collaboratorsAdded.Add(collaborator);
        }
    }

    private void RemoveCollaborator(AppUser collaborator)
    {
        collaboratorsAdded.Remove(collaborator);
    }

    private async Task Save()
    {
        TempJob.Collaborators = collaboratorsAdded;
        Console.WriteLine("Saving Collaborator");
        await TempJobChanged.InvokeAsync(TempJob);
    }

    private object DeveloperCardClass(AppUser developer)
    {
        if (collaboratorsAdded.FindAll(d => d.id == developer.id).Count() > 0)
            return "appform-left-row-selected";
        return "appform-left-row";
    }

    private string GetBody(AppUser developer)
    {
        return $"Good Day {developer.name} {developer.surname},%0D%0A%0D%0AThis%20is%20to%20inform%20you%20that%20you%20are%20now%20part%20of%20the%20recruitment%20team.%0D%0A%0D%0AWe're%20excited%20to%20have%20you!";
    }

    private void EmailTeam()
    {
        
    }

    private object GetBody(List<AppUser> collaborators)
    {
        return "Good Day Team,%0D%0A%0D%0AThis%20is%20to%20welcome%20you%20all%20to%20the%20recruitment%20team.%0D%0A%0D%0AWe're%20excited%20to%20have%20you!";
    }

    private object GetCC(List<AppUser> team)
    {
        if (team.Count == 1)
        {
            return team[0].email;
        }
        StringBuilder cc = new StringBuilder();
        for(int i = 1; i < team.Count; i++)
        {
            var email = team[i].email;
            cc.Append($"{email},");
        }
        return cc.ToString();
    }

}