@page "/index"
@layout EmptyLayout
@inject HttpClient HttpClient;
@using System.Linq;
@using XebecPortal.UI.Shared.Models;
@inject NavigationManager navmanager;

<style>
    .index-container {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
        width: 100%;
        height: auto;
    }

    .index-container-left {
        margin: 0;
        padding: 0;
        height: 100vh;
        background-image: linear-gradient(rgba(35,148,227,0.5),rgba(35,148,227,0.5)),url(/Img/pexels1);
        background-size: contain;
        background-position: center;
        border-bottom-right-radius: 100%;
        transition: 1.1s 0.4s ease-in-out;
    }

    .index-container-right {
        margin: 0;
        padding: 0;
        height: 100vh;
    }

    .index-left-top-1 {
        height: 15vh;
        margin-top: 5vh;
        margin-bottom: 5vh;
        width: 50%;
        margin-left: 22%;
        margin-right: 28%;
        text-align: center;
    }

    .index-left-top-2 {
        height: 15vh;
        margin-top: 5vh;
        width: 50%;
        margin-left: 35%;
        margin-right: 15%;
        text-align: center;
        margin-bottom: 5vh;
    }

    .index-left-bottom {
        height: 60vh;
        margin-bottom: 12.5vh;
        width: 100%;
    }

    img {
        width: 100%;
        height: 65vh;
        margin-bottom: 5vh;
    }

    .index-content-header {
        color: white;
        opacity: 1;
        height: 5vh;
        font-weight: 800;
        font-size: 1rem;
    }

    .index-content-button {
        background-color: white;
        color: #003340;
        font-weight: 600;
        font-size: 1rem;
        border: none;
        width: 50%;
        border-radius: 0.5rem;
        height: 5vh;
        text-align: center;
    }

        .index-content-button:hover {
            color: #003340;
            background-color: #A7A9AB;
            font-weight: 600;
            font-size: 1rem;
            border: none;
            width: 50%;
            border-radius: 0.5rem;
            height: 5vh;
            text-align: center;
        }

    .index-form-login {
        width: 50%;
        margin-top: 28%;
        margin-left: 25%;
        margin-right: 25%;
        background-color: rgba(0,0,0,0.2);
        box-shadow: rgba(0, 0, 0, 0.8) 0px 5px 15px;
    }

    .index-form-register {
        width: 60%;
        margin-top: 5%;
        margin-left: 20%;
        margin-right: 20%;
        background-color: rgba(0,0,0,0.2);
        box-shadow: rgba(0, 0, 0, 0.8) 0px 5px 15px;
    }

    .index-form-heading {
        width: 100%;
        padding-top: 4vh;
        font-family: sans-serif;
        text-align: center;
        opacity: 1;
        border-radius: 0.5rem;
        margin-bottom: 5vh;
    }

    .index-form-heading-1 {
        font-size: 2rem;
        font-weight: 800;
        color: #003340;
        height: 5vh;
        margin-bottom: 3vh;
        color: #A7A9AB;
    }

    .index-form-heading-2 {
        font-size: 0.8rem;
        font-weight: 700;
        color: white;
        height: 3vh;
    }

    .index-form-heading-3 {
        font-size: 0.8rem;
        font-weight: 600;
        color: white;
        height: 5vh;
    }

    .index-form-group {
        margin-bottom: 2vh;
        width: 100%;
        display: flex;
    }

    .index-form-icon {
        font-size: 1.2rem;
        color: white;
        width: 10%;
        margin-left: 10%;
        height: 7vh;
        text-align: center;
        line-height: 7vh;
        background-color: #003340;
        border-bottom-left-radius: 0.5rem;
        border-top-left-radius: 0.5rem;
    }

    input {
        background-color: #003340;
        width: 70%;
        height: 7vh;
        font-size: 0.7rem;
        border-bottom-right-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        font-weight: 800;
        color: white;
        margin-right: 10%;
        border: none;
        padding: 1rem 1rem 1rem 1rem;
    }

        input:focus, textarea:focus, select:focus {
            outline: none;
        }

    ::placeholder {
        color: white;
        font-size: 0.7rem;
        font-weight: 900;
    }

    .forgotpassword {
        color: white;
        width: 80%;
        margin-left: 10%;
        margin-right: 10%;
        text-align: right;
        height: 3vh;
        font-size: 0.7rem;
        font-weight: 800;
        margin-bottom: 0;
        padding-bottom: 0;
        cursor: pointer;
    }

        .forgotpassword:hover {
            color: white;
            width: 80%;
            margin-left: 10%;
            margin-right: 10%;
            text-align: right;
            height: 3vh;
            font-size: 1rem;
            font-weight: 800;
            margin-bottom: 0;
            padding-bottom: 0;
            cursor: pointer;
        }

    .index-form-button {
        background-color: white;
        color: #003340;
        width: 100%;
        height: 7vh;
        border: none;
        border-radius: 0.5rem;
        text-align: center;
        font-size: 1rem;
        font-weight: 700;
        border: none;
    }

        .index-form-button:hover {
            background-color: #A7A9AB;
            width: 100%;
            height: 7vh;
            border: none;
            border-radius: 0.5rem;
            text-align: center;
            color: #003340;
            font-size: 1rem;
            font-weight: 700;
            border: none;
        }

    .index-form-or {
        text-align: center;
        height: 3vh;
        margin: 0;
        padding: 0;
    }

    .index-form-or-heading {
        font-size: 1rem;
        color: #A7A9AB;
        font-weight: 100;
    }

    .index-socialmedia-div {
        color: white;
        font-size: 1.5rem;
        width: 20%;
        height: 5vh;
        margin-top: 2vh;
        margin-left: 14%;
    }

        .index-socialmedia-div:hover {
            color: white;
            font-size: 2.5rem;
            width: 20%;
            height: 5vh;
            margin-top: 0vh;
            margin-left: 14%;
        }


    .index-form-checkbox {
        width: 10%;
        margin-left: 20%;
        height: 5vh;
        line-height: 5vh;
    }

    .index-form-checkbox-div {
        display: flex;
        height: 100%;
        width: 33%;
    }

    .index-checkbox-label {
        color: #A7A9AB;
        font-weight: 800;
        font-size: 0.8rem;
        width: 70%;
        height: 100%;
        line-height: 5vh;
    }
</style>

<div class="row index-container" hidden="@LoginFormIsHidden">
    <div class="col-xl-7 index-container-left">
        <div class="index-left-top-1" hidden="@RightDisplayLoginIsHidden">
            <h3 class="index-content-header">new to xebec?</h3>
            <button class="index-content-button" @onclick="ToRegistrationPage">Register</button>
        </div>
        <div class="index-left-top-1" hidden="@RightDisplayForgotPasswordIsHidden">
            <h3 class="index-content-header">go back to login page</h3>
            <button class="index-content-button" @onclick="ToLoginPage">Login</button>
        </div>
        <div class="index-left-bottom">
            <img src="img/login-phone3.svg" asp-append-version="true">
        </div>
    </div>
    <div class="col-xl-5 index-container-right">
        <form class="index-form-login" hidden="@RightDisplayLoginIsHidden">
            <div class="form-group index-form-heading">
                <h1 class="index-form-heading-1">login</h1>
                <h1 class="index-form-heading-2">welcome back to the xebec platform</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-user"></i>
                </div>
                <input type="email" placeholder="email address" @bind="@Email">
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-lock "></i>
                </div>
                <input type="password" placeholder="password" @bind="@Password">
            </div>
            <div class="form-group index-form-group">
                <h1 class="forgotpassword" @onclick="ToForgotPasswordForm">forgot password?</h1>
            </div>
            <div class="form-group index-form-or">
                <h1 class="index-form-heading-3">or login using</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-socialmedia-div">
                    <i class="fab fa-google"></i>
                </div>
                <div class="index-socialmedia-div">
                    <i class="fab fa-microsoft"></i>
                </div>
                <div class="index-socialmedia-div">
                    <i class="fab fa-facebook"></i>
                </div>
            </div>
            <div class="form-group index-form-or" hidden="@invalidEmailorPasswordMessageIsHidden">
                <h1 class="index-form-heading-3">incorrect credentials</h1>
            </div>
            <div class="form-group index-form-or" hidden="@notRegisteredMessageIsHidden">
                <h1 class="index-form-heading-3">you are not registered on xebec</h1>
            </div>
            <input type="button" class="index-form-button" value="Submit" @onclick="Login" />
        </form>
        <form class="index-form-login" hidden="@RightDisplayForgotPasswordIsHidden">
            <div class="form-group index-form-heading">
                <h1 class="index-form-heading-2">we will send you an email with a link to create your new password</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-user"></i>
                </div>
                <input type="email" placeholder="email address" @bind="@Email">
            </div>
            <div class="form-group index-form-or" hidden="@invalidEmailorPasswordMessageIsHidden">
                <h1 class="index-form-heading-3">invalid email</h1>
            </div>
            <div class="form-group index-form-or" hidden="@validSubmitForgotPasswordMessageIsHidden">
                <h1 class="index-form-heading-3">check your email for a link from us</h1>
            </div>
            <input type="button" class="index-form-button" value="Submit" @onclick="SendForgotPassword" />
        </form>
    </div>
</div>

<div class="row index-container" hidden="@RegistrationFormIsHidden">
    <div class="col-xl-7 index-container-left">
        <div class="index-left-top-2">
            <h3 class="index-content-header">already a member of xebec?</h3>
            <button class="index-content-button" @onclick="ToLoginPage">login</button>
        </div>
        <div class="index-left-bottom">
            <img src="img/login-grey.svg" asp-append-version="true">
        </div>
    </div>
    <div class="col-xl-5 index-container-right">
        <form class="index-form-register">
            <div class="form-group index-form-heading">
                <h1 class="index-form-heading-1">register</h1>
                <h1 class="index-form-heading-2">welcome to the xebec platform</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-user"></i>
                </div>
                <input type="text" placeholder="name" @bind="@thisUser.Name">
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fas fa-users"></i>
                </div>
                <input type="text" placeholder="surname" @bind="@thisUser.Surname">
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fas fa-at"></i>
                </div>
                <input type="email" placeholder="email address" @bind="@Email">
            </div>
            <div class="form-group index-form-or" hidden="@existingUserMessageIsHidden">
                <h1 class="index-form-heading-3">this email is registered on the platform</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-lock "></i>
                </div>
                <input type="password" placeholder="password" @bind="@password1">
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-lock "></i>
                </div>
                <input type="password" placeholder="confirm password" @bind="@password2">
            </div>
            <div class="form-group index-form-or" hidden="@passwordMessageIsHidden">
                <h1 class="index-form-heading-3">passwords do not match</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-checkbox-div">
                    <input type="checkbox" class="index-form-checkbox" @onclick="@IsApplicant" @bind="@applicant" /><h2 class="index-checkbox-label">applicant</h2>
                </div>
                <div class="index-form-checkbox-div">
                    <input type="checkbox" class="index-form-checkbox" @onclick="@IsDeveloper" @bind="@developer" /><h2 class="index-checkbox-label">developer</h2>
                </div>
                <div class="index-form-checkbox-div">
                    <input type="checkbox" class="index-form-checkbox" @onclick="@IsHR" @bind="@hr" /><h2 class="index-checkbox-label">hr admin</h2>
                </div>
            </div>
            <div class="form-group index-form-or">
                <h1 class="index-form-heading-3">or register using</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-socialmedia-div">
                    <i class="fab fa-google"></i>
                </div>
                <div class="index-socialmedia-div">
                    <i class="fab fa-microsoft"></i>
                </div>
                <div class="index-socialmedia-div">
                    <i class="fab fa-facebook"></i>
                </div>
            </div>

            <div class="form-group index-form-or" hidden="@selectCheckBoxMessageIsHidden">
                <h1 class="index-form-heading-3">checkbox not selected</h1>
            </div>
            <div class="form-group index-form-or" hidden="@successfulRegistrationMessageIsHidden">
                <h1 class="index-form-heading-3">you have been successfully registered to xebec</h1>
            </div>
            <div class="form-group index-form-or" hidden="@confirmAccountMessageIsHidden">
                <h1 class="index-form-heading-3">we will send you a key and link to activate your account</h1>
            </div>
            <input type="button" class="index-form-button" @onclick="Register" value="Submit" />
        </form>

    </div>

</div>

@code{

    // See login or registration form
    private bool LoginFormIsHidden;
    private bool RegistrationFormIsHidden;

    // See login or forgot password form
    private bool RightDisplayLoginIsHidden;
    private bool RightDisplayForgotPasswordIsHidden;

    //login invalid messages
    private bool invalidEmailorPasswordMessageIsHidden;
    private bool notRegisteredMessageIsHidden;

    public UserModel thisUser = new UserModel();
    private string Email = "";
    private string Password = "";

    private ForgotPasswordModel forgotPassword = new ForgotPasswordModel();
    private string forgotpasswordlink = "https://localhost:44364/forgotpassword";
    private bool validSubmitForgotPasswordMessageIsHidden;

    private List<UserModel> users = new List<UserModel>();

    private string password1 = "";
    private string password2 = "";

    private bool existingUserMessageIsHidden;
    private bool passwordMessageIsHidden;
    private bool selectCheckBoxMessageIsHidden;
    private bool successfulRegistrationMessageIsHidden;
    private bool confirmAccountMessageIsHidden;

    private bool applicant;
    private bool developer;
    private bool hr;

    private string confirmationlink = "https://localhost:44364/confirmation";

    private KeyRequest request;

    protected override async Task OnInitializedAsync()
    {
        LoginFormIsHidden = false;
        RegistrationFormIsHidden = true;

        RightDisplayLoginIsHidden = false;
        RightDisplayForgotPasswordIsHidden = true;
        validSubmitForgotPasswordMessageIsHidden = true;

        invalidEmailorPasswordMessageIsHidden = true;
        notRegisteredMessageIsHidden = true;

        passwordMessageIsHidden = true;
        existingUserMessageIsHidden = true;

        selectCheckBoxMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

        applicant = true;
        developer =true;
        hr = true;

        users = await HttpClient.GetFromJsonAsync<List<UserModel>>("https://my-json-server.typicode.com/IviweMalotana/xebecDB/Users");
    }

    private void ToLoginPage()
    {
        LoginFormIsHidden = false;
        RegistrationFormIsHidden = true;

        RightDisplayLoginIsHidden = false;
        RightDisplayForgotPasswordIsHidden = true;

        invalidEmailorPasswordMessageIsHidden = true;
        notRegisteredMessageIsHidden = true;
        validSubmitForgotPasswordMessageIsHidden = true;

        passwordMessageIsHidden = true;
        existingUserMessageIsHidden = true;

        selectCheckBoxMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

    }

    public void Login()
    {

        try
        {
            thisUser = users.Where(a => a.Email.Equals(Email)).Single();


            if (thisUser.Registered == true && thisUser.Password.Equals(Password))
            {

                navmanager.NavigateTo("/main/" + thisUser.ID);

            }
            else if (thisUser.Registered == false)
            {
                LoginFormIsHidden = false;
                RegistrationFormIsHidden = true;

                RightDisplayLoginIsHidden = false;
                RightDisplayForgotPasswordIsHidden = true;

                invalidEmailorPasswordMessageIsHidden = true;
                notRegisteredMessageIsHidden = false;

            }
            else if (!thisUser.Password.Equals(Password))
            {
                LoginFormIsHidden = false;
                RegistrationFormIsHidden = true;

                RightDisplayLoginIsHidden = false;
                RightDisplayForgotPasswordIsHidden = true;

                invalidEmailorPasswordMessageIsHidden = false;
                notRegisteredMessageIsHidden = true;

            }
            passwordMessageIsHidden = true;
            existingUserMessageIsHidden = true;

            selectCheckBoxMessageIsHidden = true;
            successfulRegistrationMessageIsHidden = true;
            confirmAccountMessageIsHidden = true;

        }
        catch
        {
            LoginFormIsHidden = false;
            RegistrationFormIsHidden = true;

            RightDisplayLoginIsHidden = false;
            RightDisplayForgotPasswordIsHidden = true;

            invalidEmailorPasswordMessageIsHidden = false;
            notRegisteredMessageIsHidden = true;

            passwordMessageIsHidden = true;
            existingUserMessageIsHidden = true;

            selectCheckBoxMessageIsHidden = true;
            successfulRegistrationMessageIsHidden = true;
            confirmAccountMessageIsHidden = true;
        }

    }

    private void ToRegistrationPage()
    {
        LoginFormIsHidden = true;
        RegistrationFormIsHidden = false;

        RightDisplayLoginIsHidden = true;
        RightDisplayForgotPasswordIsHidden = true;

        invalidEmailorPasswordMessageIsHidden = true;
        notRegisteredMessageIsHidden = true;

        passwordMessageIsHidden = true;
        existingUserMessageIsHidden = true;

        selectCheckBoxMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

    }

    private void ToForgotPasswordForm()
    {
        LoginFormIsHidden = false;
        RegistrationFormIsHidden = true;

        RightDisplayLoginIsHidden = true;
        RightDisplayForgotPasswordIsHidden = false;
        validSubmitForgotPasswordMessageIsHidden = true;

        invalidEmailorPasswordMessageIsHidden = true;
        notRegisteredMessageIsHidden = true;

        passwordMessageIsHidden = true;
        existingUserMessageIsHidden = true;

        selectCheckBoxMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

    }

    private async Task SendForgotPassword()
    {
        try
        {
            thisUser = users.Where(a => a.Email.Equals(Email)).Single();
            invalidEmailorPasswordMessageIsHidden = true;
            validSubmitForgotPasswordMessageIsHidden = false;
            forgotPassword.Email = Email;
            forgotPassword.Link = forgotpasswordlink;
            await HttpClient.PostAsJsonAsync("https://prod-254.westeurope.logic.azure.com:443/workflows/36ef500265094a1193de55a42b18adb3/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9Ez43vZDBzvzl-qigJMdlQ_te0RTiuHW50l0E17wW-M", forgotPassword);

        }
        catch
        {
            invalidEmailorPasswordMessageIsHidden = false;
            validSubmitForgotPasswordMessageIsHidden = true;
        }

    }

    private void IsApplicant()
    {
        developer = hr = false;
        thisUser.Role = "applicant";
    }

    private void IsDeveloper()
    {
        applicant = hr = false;
        thisUser.Role = "developer";
    }

    private void IsHR()
    {
        developer = applicant = false;
        thisUser.Role = "hr";
    }

    private void Register()
    {
        bool passwordIsValid = RegisterPasswordCheck();
        bool emailIsValid = RegisterEmailCheck();
        bool checkboxSelected = RegisterCheckboxCheck();

        if (passwordIsValid && emailIsValid && checkboxSelected)
        {
            //get ID of last item
            int lastItem = users.Count;
            UserModel lastUser = users[lastItem - 1];
            int lastID = lastUser.ID;

            //increment int
            int newId = lastID++;

            // set usermodel(newID)
            thisUser.ID = newId;

            if (applicant)
            {
                thisUser.Key = "";
                thisUser.LinkVisits = 0;

                thisUser.Registered = true;

                // Post model to dB
                successfulRegistrationMessageIsHidden = false;

            }
            else
            {
                thisUser.Key = "123";
                thisUser.Registered = false;

                //Post model to dB

                // Power Flow to RegistrationKeyRequest(send model)
                request.Id = thisUser.ID;
                request.Email = thisUser.Email;
                request.Key = thisUser.Key;
                request.Link = confirmationlink;
                HttpClient.PostAsJsonAsync("https://prod-223.westeurope.logic.azure.com:443/workflows/fa4c087fb4bc4ee6af54b07047ca6f57/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=doWY1Jeit9AC3MhFltbcskJ9J5ygBO9nZ_8BJEe5hPE", request);
                successfulRegistrationMessageIsHidden = true;
                confirmAccountMessageIsHidden = false;

            }
        }
    }

    private bool RegisterPasswordCheck()
    {
        if (password1 != password2)
        {
            passwordMessageIsHidden = false;
            existingUserMessageIsHidden = true;
            selectCheckBoxMessageIsHidden = true;
            successfulRegistrationMessageIsHidden = true;
            confirmAccountMessageIsHidden = true;
            return false;
        }
        else
        {
            passwordMessageIsHidden = true;
            existingUserMessageIsHidden = true;
            selectCheckBoxMessageIsHidden = true;
            successfulRegistrationMessageIsHidden = true;
            confirmAccountMessageIsHidden = true;
            thisUser.Password = password1;
            return true;
        }
    }

    private bool RegisterEmailCheck()
    {
        passwordMessageIsHidden = true;
        selectCheckBoxMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

        try
        {
            int existingUser = users.Where(x => x.Email == Email).Select(x => x.ID).Single();
            existingUserMessageIsHidden = false;

            return false;

        }
        catch
        {
            existingUserMessageIsHidden = true;
            thisUser.Email = Email;
            return true;
        }
    }

    private bool RegisterCheckboxCheck()
    {

        passwordMessageIsHidden = true;
        existingUserMessageIsHidden = true;
        successfulRegistrationMessageIsHidden = true;
        confirmAccountMessageIsHidden = true;

        if (applicant == false && developer == false && hr == false)
        {
            selectCheckBoxMessageIsHidden = false;
            return false;
        }
        else
        {
            selectCheckBoxMessageIsHidden = true;
            return true;
        }
    }
}