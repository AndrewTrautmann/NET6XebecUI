@inherits LayoutComponentBase
@inject NavigationManager navmanager
@inject HttpClient HttpClient
@layout EmptyLayout
@using System.Linq;
@using XebecPortal.UI.Shared.Home.Models;
@using XebecPortal.UI.Shared.Components; 

<style>
    .underlay {
        height: 100vh;
        width: 100vw;
        background-size: cover;
        background-image: url(/Img/background.svg);
        background-attachment: fixed;
        background-position: center;
        scroll-margin: 1vw;
        overflow-y: auto;
        position: absolute;
        z-index: 0;
    }

    .overlay {
        top: 10vh;
        height: 90vh;
        width: 100vw;
        position: relative;
        z-index: 0;
    }

    .nav {
        background-color: white;
        top: 0vh;
        height: 10vh;
        width: 100vw;
        position: fixed;
        z-index: 1;
    }

    .mainlayout-xebec-heading {
        height: 10vh;
        width: 90px;
        margin-left: 10px;
    }

    .mainlayout-xebec-logo {
        height: 10vh;
        min-width: 105%;
        background-image: url(/Img/xebeclogoblack.png);
        background-size: cover;
        background-position: center;
    }

    .nav-buttons {
        margin-top: 2.5vh;
        height: 3vh;
        font-size: 1em;
        font-family: opensans-condensed-bold;
        color: #004393 !important;
        background-color: transparent !important;
        border: none;
        border-radius: 1em;
        width: 70%;
        margin-left: 15%;
        margin-right: 15%;
    }
        .nav-buttons:hover {
            transition: 0.1s all ease-out;
            transform: scale(1.5);
            color: white;
            background-color: #00bcae;
        }

        .nav-buttons:focus {
            transition: 0.1s all ease-in;
            transform: scale(1.5);
            color: white;
            background-color: #00bcae;
        }

    .nav-buttons-pressed {
        margin-left: 15%;
        margin-right: 15%;
        width: 70%;
        margin-top: 2.5vh;
        height: 3vh;
        background-color: #00bcae;
        border: none;
        border-radius: 1em;
        color: white;
        font-family: opensans-condensed-bold;
        font-size: 1em;
        transition: 0.1s all ease-out;
    }

    .first {
        width: 20vw;
        height: 10vh;
    }

    .second {
        width: 30vw;
        height: 10vh;
    }

    .third {
        width: 10vw;
        height: 10vh;
    }

    .fourth{
        width: 15vw;
        height: 10vh;
        margin-bottom: 1vh;
    }

    .services-dropdown {
        top: 10vh;
        left: 57.5vw;
        background-color: transparent;
        height: 10vh;
        position: absolute;
        width: 15vw;
        display:flex;
    }

    .fourth-buttons {
        height: 6vh;
        font-size: 1em;
        font-family: opensans-condensed-bold;
        background-color: #00bcae;
        color: white;
        border: none;
        border-radius: 1em;
        width: 90%;
        margin-top: 1vh;
        margin-bottom: 1vh;
        margin-left: 5%;
        margin-right: 5%;
    }

        .fourth-buttons:hover {
            transition: 0.1s all ease-out;
            height: 6vh;
            font-size: 1em;
            font-family: opensans-condensed-bold;
            border: none;
            border-radius: 1em;
            width: 90%;
            margin-top: 1vh;
            margin-bottom: 1vh;
            margin-left: 5%;
            margin-right: 5%;
            background-color: #d35bc9;
            color: white;
        }

        .fourth-buttons:focus {
            height: 6vh;
            font-size: 1em;
            font-family: opensans-condensed-bold;
            border: none;
            border-radius: 1em;
            width: 90%;
            margin-top: 1vh;
            margin-bottom: 1vh;
            margin-left: 5%;
            margin-right: 5%;
            background-color: #d35bc9;
            color: white;
            transition: 0.1s all ease-out;
        }

</style>

<div class="underlay">
    <div class="nav">
        <div class="first">
            <div class="mainlayout-xebec-heading">
                <div class="mainlayout-xebec-logo"></div>
            </div>
        </div>
        <div class="second"></div>
        <div class="third">
            <button type="button" class="nav-buttons" value="HOME" @onclick="ToHome" >HOME</button>
        </div>
        <div class="third">
            <button type="button" class="nav-buttons" value="SERVICES" @onclick="ToServices" data-toggle="dropdown" >SERVICES</button>
            <ul class="dropdown-menu" style="margin-left: 60vw; border-radius: 20%; width: 10vw;">
                <li >
                    <input type="button" class="fourth-buttons" style="width:90%" value="HR SERVICES" @onclick="ToHRServices" />
                </li>
                <li >
                    <input type="button" class="fourth-buttons" style="width:90%" value="APPLICANT SERVICES" @onclick="ToApplicantServices"/>
                </li>
            </ul>

        </div>
        <div class="third">
            <button type="button" class="nav-buttons" value="JOB PORTAL" @onclick="ToJobPortal" >JOB PORTAL</button>
        </div>
        <div class="third">
            <button type="button" class="nav-buttons" value="SIGN IN" @onclick="ToSignIn" >SIGN IN</button>
        </div>
        <div class="third">
            <button type="button" class="nav-buttons" value="CONTACT" @onclick="ToContact">CONTACT</button>
        </div>
    </div>
    <div class="overlay">
        @Body
    </div>
</div>

@code {

    private bool Home;
    private bool SignIn;
    private bool JobPortal;
    private bool Contact;
    private bool Services;

    private bool ServicesHover;
    private bool HomeHover;
    private bool SignInHover;
    private bool JobPortalHover;
    private bool ContactHover;

    private bool ApplicantServicesHover, HRServicesHover;
    private bool ApplicantServices, HRServices;


    protected async override Task OnInitializedAsync() { 
    
        await Task.Delay(0);
    }

    private void ToHome()
    {
        navmanager.NavigateTo("/");
        Homehover();
    }

    private void ToSignIn()
    {
        SignInhover();
        navmanager.NavigateTo("signin");
    }

    private void ToJobPortal()
    {
        JobPortalhover();
        navmanager.NavigateTo("jobportal");
    }

    private void ToServices()
    {
        Serviceshover();
        Services= true;
    }

    private void ToApplicantServices()
    {
        ApplicantServiceshover();
        navmanager.NavigateTo("applicantservices");
        Services = false;
    }

    private void ToHRServices()
    {
        HRServiceshover();
        navmanager.NavigateTo("hrservices");
        Services = false;
    }

    private void ToContact()
    {
        Contacthover();
        navmanager.NavigateTo("contact");
    }

    private void Homehover()
    {
        HomeHover = true;
        SignInHover = JobPortalHover = ContactHover = ServicesHover = false;
    }

    private void SignInhover()
    {
        SignInHover = true;
        HomeHover = JobPortalHover = ContactHover = ServicesHover = false;
    }

    private void JobPortalhover() {

        JobPortalHover = true;
        HomeHover = SignInHover = ContactHover = ServicesHover = false;
    }

    private void Contacthover()
    {
        ContactHover = true;
        SignInHover = JobPortalHover = HomeHover = ServicesHover = false;
    }

    private void Serviceshover()
    {
        ServicesHover = true;
        ContactHover = SignInHover = JobPortalHover = HomeHover = false;
    }

    private void ApplicantServiceshover()
    {
        ApplicantServicesHover = true;
        HRServicesHover = false;
    }

    private void HRServiceshover()
    {
        ApplicantServicesHover = false;
        HRServicesHover = true;
    }
}
