@page "/main"
@inherits LayoutComponentBase
@inject IJSRuntime JsRuntime
@inject HttpClient HttpClient
@using Microsoft.AspNetCore.Components
@layout EmptyLayout
@inject NavigationManager navmanager
@using XebecPortal.UI.Shared.Home.Models
@inject UserState state

<style>

    .page {
        top: 0;
        left: 0;
        height: 100vh;
        background-image: linear-gradient(rgba(0, 188, 174,0.05),rgba(0, 188, 174,0.05)),url("../Img/background.svg");
        background-size: cover;
        background-position: center;
    }

    .header {
        top: 0;
        left: 0;
        height: 10vh;
        background-color: white;
    }

    .main {
        top: 10vh;
        left: 0;
        height: 85vh;
        width: 100%;
    }

    .main-heading-text-div {
        width: 93%;
        margin-top: -1vh;
    }

    .main-heading-text {
        font-size: 1.2em;
        font-weight: 800;
        display: inline-block;
        font-family: opensans-condensed-bold;
        color: rgba(0,0,0,0.5);
        text-align: left;
        text-transform: uppercase;
    }

    .main-component {
        height: 85vh;
        width: 100%;
    }

    .mainlayout-heading {
        width: 70%;
        height: 100%;
        top: 0;
        background-color: none;
        display: flex;
    }

    .mainlayout-xebec-heading {
        font-size: 2em;
        color: rgba(0, 188, 174,1);
        background-color: none;
        font-weight: 900;
        font-family: opensans-condensed-bold;
        text-align: center;
        padding-left: 2em;
    }

    .icon-user {
        width: 50px;
        height: 5vh;
        margin-right: 1em;
        margin-top: 2vh;
    }

    .icon-menu {
        width: 50px;
        height: 5vh;
        margin-top: 2vh;
        margin-right: 2em;
        margin-top: 2vh;
    }

    .nav {
        width: 30%;
        height: 10vh;
        top: 0;
        justify-content: right;
        justify-items: right;
    }

    .nav-menu {
        height: 100%;
        background-color: white;
    }

    .nav-link {
        width: 100%;
        height: 10vh;
        margin-bottom: 0.1em;
        display: flex;
        vertical-align: middle;
        border-radius: 2em;
        background-color: white;
        color: #00bcae;
        cursor: pointer;
    }

    .icons {
        font-size: 2em;
        display: inline-block;
        width: 20%;
        height: 100%;
        padding-top: 0.4em;
        padding-left: 0.2em;
    }

    .nav-link-text {
        font-size: 1.5em;
        display: inline-block;
        padding-top: 0.1em;
        width: 80%;
        height: 100%;
        font-family: opensans-condensed-light;
    }

    .nav-link:hover {
        background-color: #00bcae;
        color: white;
    }

    .nav-link:focus {
        background-color: #00bcae;
        color: white;
    }

    .infodiv {
        height: 5vh;
        width: 100%;
    }

    .myclosebutton {
        color: rgba(0, 188, 174,1);
        height: 5vh;
    }

    .profile-logout {
        color: #00bcae;
        font-size: 1.5em;
        font-weight: 800;
        font-family: opensans-bold;
        width: 100%;
        text-align: center;
        height: 100%;
    }

        .profile-logout:hover {
            color: lightgrey;
            font-size: 1.5em;
            font-weight: bolder;
            height: 100%;
            width: 100%;
            font-family: opensans-bold;
            text-align: center;
        }

    .offcanvas-header-color {
        background-color: rgba(0,0,0,0.1);
    }

    .offcanvas-body-main {
        overflow-y: hidden;
    }

    .mainlayout-profile {
        height: 30vh;
        width: 100%;
        margin: 0;
        padding: 0;
        background-color: rgba(0,0,0,0.1);
    }

    .profile-div {
        height: 25vh;
        width: 70%;
        margin-left: 15%;
        margin-right: 15%;
    }

    .profile-image-div-cover {
        height: 10vh;
        width: 30%;
        margin-right: 35%;
        margin-left: 35%;
        background-color: none;
        border: 0.4em rgba(0, 188, 174,1) solid;
        border-radius: 100%;
    }

    .profile-image-div {
        height: 8vh;
        margin-top: 1vh;
        margin-bottom: 1vh;
        width: 80%;
        margin-right: 10%;
        margin-left: 10%;
        border-radius: 100%;
    }

    .profile-name-div {
        height: 5vh;
        width: 100%;
        margin-top: 0;
        padding-top: 0;
        text-align: center;
    }

    .profile-name {
        height: 5vh;
        color: white;
        text-transform: uppercase;
        font-family: opensans-bold;
        font-weight: 700;
        font-size: 1.2em;
    }

    .profile-role-div {
        height: 5vh;
        width: 80%;
        margin-left: 10%;
        margin-right: 10%;
        margin-top: 0;
        padding-top: 0;
        margin-bottom: 5vh;
    }

    .profile-role {
        height: 3vh;
        color: white;
        text-align: center;
        font-family: opensans-condensed-light;
        font-weight: 700;
        font-size: 1em;
    }
</style>

<div class="page" hidden="@ApplicantIsHidden">
    <div class="header">
        <div class="d-flex justify-content-between align-items-center">
            <div class="mainlayout-heading">
                <h1 class="mainlayout-xebec-heading">XEBEC</h1>
            </div>
            <div class="nav">
                <img class="icon-menu" src="/Img/list.svg" data-bs-toggle="offcanvas" data-bs-target="#showApplicantNav" aria-controls="offcanvasRight" />
                <img class="icon-menu" src="/Img/list.svg" data-bs-toggle="offcanvas" data-bs-target="#showApplicantNavAlert" aria-controls="offcanvasRight" />
            </div>
        </div>
    </div>

    <!--Work on this navigation-->
    <div class="offcanvas offcanvas-end nav-menu" tabindex="-1" id="showApplicantNav" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header offcanvas-header-color">
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="mainlayout-profile">
            <div class="profile-div">
                <div class="profile-image-div-cover">
                    <div class="profile-image-div">
                    </div>
                </div>
                <div class="profile-name-div">
                    <h2 class="profile-name">@state.Name &nbsp @state.Surname</h2>
                </div>
                <div class="profile-role-div">
                    <h2 class="profile-role">@state.Role</h2>
                </div>
            </div>
        </div>
        <div class="offcanvas-body offcanvas-body-main">
            <div class="nav-link" @onclick="showApplicantApplicationProfile">
                <div class="icons"><i class="fa fa-book" aria-hidden="true"></i></div><h2 class="nav-link-text">Application Profile</h2>
            </div>
            <div class="nav-link" @onclick="showApplicantJobPortal">
                <div class="icons"><i class="fa fa-briefcase" aria-hidden="true"></i></div><h2 class="nav-link-text">Job Portal</h2>
            </div>
            <div class="nav-link" @onclick="showApplicantMyJobs">
                <div class="icons"><i class="fa fa-users" aria-hidden="true"></i></div><h2 class="nav-link-text">My Jobs</h2>
            </div>
        </div>
        <div class="infodiv">
            <h2 class="profile-logout" @onclick="Logout">Sign Out</h2>
        </div>
    </div>

    <!--Alert Navigation-->
    <div class="offcanvas offcanvas-end nav-menu" tabindex="-1" id="showApplicantNavAlert" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header offcanvas-header-color">
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body offcanvas-body-main">
            <div class="row" style="margin-left: auto !important; margin-right: auto !important">
                <div class="col-12">
                    <h3 class="text-center" style="font-weight:900">Configure Alerts</h3>
                </div>
                <div class="col-12">
                    <h4>Filter By:</h4>
                </div>
                <div class="col-12 d-grid gap-4">
                    <div class="col-12">
                        <MudSelect T="string" Class="form-control rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Departments" MultiSelection="true" Label="Department" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextDepartment)" >
                            @if (jobs?.Any() == true)
                            {
                                @foreach (var item in jobs.Select(x => x.Department).Distinct())
                                {
                                    <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                        <MudSelect T="string" Class="form-control rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Jobs" MultiSelection="true" Label="Job Title" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextJob)">
                            @if (jobs?.Any() == true)
                            {
                                @foreach (var item in jobs.Select(x => x.Title).Distinct())
                                {
                                    <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                        <MudSelect T="string" Class="form-control rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Companies" MultiSelection="true" Label="Company" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextCompany)">
                            @if (jobs?.Any() == true)
                            {
                                @foreach (var item in jobs.Select(x => x.Company).Distinct())
                                {
                                    <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                        <MudSelect T="string" Class="form-control rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Locations" MultiSelection="true" Label="Location" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextLocation)">
                            @if (jobs?.Any() == true)
                            {
                                @foreach (var item in jobs.Select(x => x.Location).Distinct())
                                {
                                    <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12">
                        <MudSelect T="string" Class="form-control rounded-pill" DisableUnderLine="true" Style="cursor:pointer" AnchorOrigin="Origin.BottomCenter" SelectAll="true" SelectAllText="Select All Types" MultiSelection="true" Label="Type" MultiSelectionTextFunc="new Func<List<string>, string>(GetMultiSelectionTextType)">
                            @if (jobTypes?.Any() == true)
                            {
                                @foreach (var item in jobTypes.Select(x => x.Type).Distinct())
                                {
                                    <MudSelectItem T="string" Value="item">@item</MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </div>
                    <div class="col-12 d-flex justify-content-center">
                        <button class="btn btn-primary" type="button">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="main" hidden="@applicantApplicationProfileIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.Applicant.ApplicationProfile />
        </div>
    </div>
    <div class="main" hidden="@applicantJobPortalIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.Applicant.JobPortal />
        </div>
    </div>
    <div class="main" hidden="@applicantMyJobsIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.Applicant.MyJobs />
        </div>
    </div>
</div>

<div class="page" hidden="@HRIsHidden">

    <div class="header">
        <div class="d-flex justify-content-between align-items-center">
            <div class="mainlayout-heading">
                <h1 class="mainlayout-xebec-heading">XEBEC</h1>
            </div>
            <div class="nav">
                <img class="icon-menu" src="/Img/list.svg" data-bs-toggle="offcanvas" data-bs-target="#showHRNav" aria-controls="offcanvasRight" />
            </div>
        </div>
    </div>
    <div class="offcanvas offcanvas-end nav-menu" tabindex="-1" id="showHRNav" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header offcanvas-header-color">
            <button type="button" class="btn-close text-reset myclosebutton" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="mainlayout-profile">
            <div class="profile-div">
                <div class="profile-image-div-cover">
                    <div class="profile-image-div">
                    </div>
                </div>
                <div class="profile-name-div">
                    <h2 class="profile-name">@state.Name &nbsp @state.Surname</h2>
                </div>
                <div class="profile-role-div">
                    <h2 class="profile-role">@state.Role</h2>
                </div>
            </div>
        </div>
        <div class="offcanvas-body offcanvas-body-main">

            <div class="nav-link" @onclick="showHRApplicantPortal">
                <div class="icons"><i class="fa fa-users" aria-hidden="true"></i></div><h2 class="nav-link-text">Applicant Portal</h2>
            </div>
            <div class="nav-link" @onclick="showHRDataAnalyticsTool">
                <div class="icons"><i class="fa fa-chart-bar" aria-hidden="true"></i></div><h2 class="nav-link-text">Data Analytics Tool</h2>
            </div>
            <div class="nav-link" @onclick="showHRJobPortal">
                <div class="icons"><i class="fa fa-briefcase" aria-hidden="true"></i></div><h2 class="nav-link-text">Job Portal</h2>
            </div>
            <div class="nav-link" @onclick="showHRCreateAJob">
                <div class="icons"><i class="fa fa-briefcase" aria-hidden="true"></i></div><h2 class="nav-link-text">Create A Job</h2>
            </div>
            <div class="nav-link" @onclick="showHRCandidateRecommender">
                <div class="icons"><i class="fa fa-briefcase" aria-hidden="true"></i></div><h2 class="nav-link-text">Candidate Recommender</h2>
            </div>
        </div>
        <div class="infodiv">
            <h2 class="profile-logout" @onclick="Logout">Sign Out</h2>
        </div>
    </div>
    <div class="main" hidden="@hrCandidateRecommenderIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.HR.CandidateRecommender />
        </div>
    </div>
    <div class="main" hidden="@hrApplicantPortalIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.HR.ApplicantPortal />
        </div>
    </div>
    <div class="main" hidden="@hrDataAnalyticsToolIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.HR.DataAnalyticsTool />
        </div>
    </div>
    <div class="main" hidden="@hrJobPortalIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.HR.JobPortal />
        </div>
    </div>
    <div class="main" hidden="@hrCreateAJobIsHidden">
        <div class="main-component">
            <XebecPortal.UI.Pages.HR.CreateJob />
        </div>
    </div>
</div>
@if (state.isLoggedIn == false)
{
    navmanager.NavigateTo("/");
}
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code{
    private List<UserModel> users = new List<UserModel>();

    private bool HRIsHidden, ApplicantIsHidden;

    private bool applicantApplicationProfileIsHidden, applicantJobPortalIsHidden, applicantMyJobsIsHidden;

    private bool hrApplicantPortalIsHidden, hrDataAnalyticsToolIsHidden, hrJobPortalIsHidden, hrCreateAJobIsHidden, hrCandidateRecommenderIsHidden;

    protected override async Task OnInitializedAsync()
    {
        if (state.Role.Equals("Candidate"))
        {
            ApplicantIsHidden = false;
            HRIsHidden = true;

            applicantApplicationProfileIsHidden = false;
            applicantJobPortalIsHidden = true;
            applicantMyJobsIsHidden = true;


            hrApplicantPortalIsHidden = true;
            hrDataAnalyticsToolIsHidden = true;
            hrJobPortalIsHidden = true;
            hrCreateAJobIsHidden = true;
            hrCandidateRecommenderIsHidden = true;
        }

        else if (state.Role.Equals("HRAdmin"))
        {
            HRIsHidden = false;
            ApplicantIsHidden = true;

            hrApplicantPortalIsHidden = true;
            hrDataAnalyticsToolIsHidden = true;
            hrJobPortalIsHidden = true;
            hrCreateAJobIsHidden = true;
            hrCandidateRecommenderIsHidden = false;

            applicantApplicationProfileIsHidden = true;
            applicantJobPortalIsHidden = true;
            applicantMyJobsIsHidden = true;
        }
        await Task.Delay(0);
    }

    private void showApplicantApplicationProfile()
    {
        applicantApplicationProfileIsHidden = false;
        applicantJobPortalIsHidden = true;
        applicantMyJobsIsHidden = true;

    }
    private void showApplicantJobPortal()
    {
        applicantApplicationProfileIsHidden = true;
        applicantJobPortalIsHidden = false;
        applicantMyJobsIsHidden = true;
    }
    private void showApplicantMyJobs()
    {
        applicantApplicationProfileIsHidden = true;
        applicantJobPortalIsHidden = true;
        applicantMyJobsIsHidden = false;
    }
    private void showHRApplicantPortal()
    {
        hrApplicantPortalIsHidden = false;
        hrDataAnalyticsToolIsHidden = true;
        hrJobPortalIsHidden = true;
        hrCreateAJobIsHidden = true;
        hrCandidateRecommenderIsHidden = true;
    }

    private void showHRDataAnalyticsTool()
    {
        hrApplicantPortalIsHidden = true;
        hrDataAnalyticsToolIsHidden = false;
        hrJobPortalIsHidden = true;
        hrCreateAJobIsHidden = true;
        hrCandidateRecommenderIsHidden = true;
    }
    private void showHRJobPortal()
    {
        hrApplicantPortalIsHidden = true;
        hrDataAnalyticsToolIsHidden = true;
        hrJobPortalIsHidden = false;
        hrCreateAJobIsHidden = true;
        hrCandidateRecommenderIsHidden = true;
    }
    private void showHRCreateAJob()
    {
        hrApplicantPortalIsHidden = true;
        hrDataAnalyticsToolIsHidden = true;
        hrJobPortalIsHidden = true;
        hrCreateAJobIsHidden = false;
        hrCandidateRecommenderIsHidden = true;
    }

    private void showHRCandidateRecommender()
    {
        hrApplicantPortalIsHidden = true;
        hrDataAnalyticsToolIsHidden = true;
        hrJobPortalIsHidden = true;
        hrCreateAJobIsHidden = true;
        hrCandidateRecommenderIsHidden = false;
    }

    private void Logout()
    {
        state.isLoggedIn = false;
    }
}