@inherits LayoutComponentBase
@inject NavigationManager navmanager
@inject HttpClient HttpClient
@layout EmptyLayout
@using System.Linq;
@using XebecPortal.UI.Shared.Home.Models;

<style>
    /* index */
    .underlay {
        background-image: linear-gradient(rgba(0, 188, 174,0.05),rgba(0, 188, 174,0.05)),url(/Img/background.svg);
        height: 100vh;
        width: 100vw;
        background-size: cover;
        background-attachment: fixed;
        background-position: center;
    }

    .overlay {
        height: 90vh;
        width: 100%;
    }

    .overlay-nav {
        background-color: white;
        height: 10vh;
        padding-top: 4vh;
        width: 100%;
        text-align: center;
    }

    /*nav*/
    .nav-buttons {
        width: 100%;
        height: inherit;
        background-color: transparent;
        border: none;
        border-radius: 1em;
        color: #00bcae;
        font-size: 1em;
        font-family: opensans-condensed-bold;
    }

    .nav-buttons-pressed {
        width: 100%;
        height: inherit;
        background-color: #d35bc9;
        border: none;
        border-radius: 1em;
        color: white;
        font-family: opensans-condensed-light;
        font-size: 1em;
    }

    .underlay-nav {
        position: absolute;
        top: 10vh;
        z-index: 2;
        height: 5vh;
        width: 101vw;
    }

    .sign-up-modal-div {
        height: 5vh;
        width: 35%;
        margin-left: 7.5%;
        margin-right: 7.5%;
    }

    .sign-up-modal {
        margin-top: 2vh;
        height: 5vh;
        border-radius: 1em;
        z-index: 2;
        display: flex;
    }

    .modal-nav-buttons {
        width: 100%;
        height: 5vh;
        text-align: center;
        line-height: 5vh;
        background-color: #00bcae;
        border: none;
        border-radius: 1em;
        color: white;
        font-size: 1em;
        font-family: opensans-condensed-bold;
    }

        .modal-nav-buttons:hover {
            background-color: #d35bc9;
            border: none;
            border-radius: 1em;
            color: white;
        }

    
</style>

<div class="underlay">
    <div class="row overlay-nav">
        <div class="col-6"></div>
        <div class="col-1">
            <input type="button" class="nav-buttons" @onmouseover="HomeHover" value="HOME" @onclick="ToHome" hidden="@Home" />
            <input type="button" class="nav-buttons-pressed" value="HOME" @onclick="ToHome" hidden="@(!Home)" />
        </div>
        <div class="col-1">
            <input type="button" class="nav-buttons" @onmouseover="ServicesHover" value="SERVICES" @onclick="ToServices" hidden="@Services" />
            <input type="button" class="nav-buttons-pressed" value="SERVICES" @onclick="ToServices" hidden="@(!Services)" />
        </div>
        <div class="col-1">
            <input type="button" class="nav-buttons" @onmouseover="SignInHover" value="SIGN IN" @onclick="ToSignIn" hidden="@SignIn" />
            <input type="button" class="nav-buttons-pressed" value="SIGN IN" @onclick="ToSignIn" hidden="@(!SignIn)" />
        </div>
        <div class="col-1">
            <input type="button" class="nav-buttons" @onmouseover="SignUpHover" value="SIGN UP" @onclick="ToSignUp" hidden="@SignUp" />
            <input type="button" class="nav-buttons-pressed" value="SIGN UP" @onclick="ToSignUp" hidden="@(!SignUp)" />
        </div>
        <div class="col-1">
            <input type="button" class="nav-buttons" @onmouseover="ContactHover" value="CONTACT" @onclick="ToContact" hidden="@Contact" />
            <input type="button" class="nav-buttons-pressed" value="CONTACT" @onclick="ToContact" hidden="@(!Contact)" />
        </div>
        <div class="col-1"></div>
    </div>
        <div class="row underlay-nav">
            @if (SignUp)
            {
                <div class="col-8"></div>
                <div class="col-3 sign-up-modal">
                    <div class="sign-up-modal-div">
                        <input type="button" class="modal-nav-buttons" value="Applicant" @onclick="ToApplicantSignUp" />
                    </div>
                    <div class="sign-up-modal-div">
                        <input type="button" class="modal-nav-buttons" value="HR" @onclick="ToHRSignUp" />
                    </div>
                </div>
                <div class="col-1"></div>
            }
        </div>


    <div class="overlay">
        @Body
    </div>

</div>

@code {

    private bool Home;
    private bool Services;
    private bool SignIn;
    private bool SignUp;
    private bool Contact;
    private bool ApplicantSignUp;
    private bool HRSignUp;

    private bool ShowHome;
    private bool ShowServices;
    private bool ShowHRSignUp;
    private bool ShowApplicantSignUp;
    private bool ShowSignIn;
    private bool ShowContact;

    
    private void ToHome()
    {
        HomeHover();
        navmanager.NavigateTo("/");
    }

    private void ToServices()
    {
        ServicesHover();
        navmanager.NavigateTo("services");
    }

    private void ToSignIn()
    {
        SignInHover();
        navmanager.NavigateTo("signin");
    }

    private void ToSignUp()
    {
        SignUpHover();
    }

    private void ToApplicantSignUp()
    {
        SignUp = true;
        Services = HRSignUp = SignIn = Home = Contact = false;
        navmanager.NavigateTo("applicantsignup");
    }
    private void ToHRSignUp()
    {
        SignUp = true;
        Services = SignUp = ApplicantSignUp = SignIn = Home = Contact = false;
        navmanager.NavigateTo("hrsignup");
    }
    private void ToContact()
    {
        ContactHover();
        navmanager.NavigateTo("contact");
    }

    private void ShowSignUpModal()
    {
        SignUp = true;
        Services = SignIn = Home = ApplicantSignUp = HRSignUp = Contact = false;
    }


    private void HomeHover()
    {
        Home = true;
        Services = SignIn = SignUp = Contact = false;
    }
    private void ServicesHover()
    {
        Services = true;
        Home = SignIn = SignUp = Contact = false;
    }
    private void SignInHover()
    {
        SignIn = true;
        Services = Home = SignUp = Contact = false;
    }
    private void SignUpHover()
    {
        SignUp = true;
        Services = SignIn = Home = Contact = false;
    }
    private void ContactHover()
    {
        Contact = true;
        Services = SignIn = SignUp = Home = false;
    }
}
