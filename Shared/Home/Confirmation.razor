@page "/confirmation"
@layout EmptyLayout
@inject HttpClient HttpClient;
@inject NavigationManager navmanager;
@using XebecPortal.UI.Shared.Home.Models

<style>
    .index-container {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
        width: 100%;
        height: auto;
        background-color: #003340;
    }

    .index-container-left {
        margin: 0;
        padding: 0;
        height: 100vh;
        background-color: rgba(0,0,0,0.2);
        border-bottom-right-radius: 100%;
        transition: 1.1s 0.4s ease-in-out;
    }

    .index-container-right {
        margin: 0;
        padding: 0;
        height: 100vh;
    }

    .index-container-left-2 {
        margin: 0;
        padding: 0;
        height: 100vh;
    }

    .index-container-right-2 {
        margin: 0;
        padding: 0;
        height: 100vh;
        transition: 1.1s 0.4s ease-in-out;
        background-color: rgba(0,0,0,0.2);
        border-bottom-left-radius: 100%;
    }

    .index-left-top-1 {
        height: 15vh;
        margin-top: 5vh;
        margin-bottom: 5vh;
        width: 50%;
        margin-left: 22%;
        margin-right: 28%;
        text-align: center;
    }

    .index-left-top-2 {
        height: 15vh;
        margin-top: 5vh;
        width: 50%;
        margin-left: 35%;
        margin-right: 15%;
        text-align: center;
        margin-bottom: 5vh;
    }

    .index-left-bottom {
        height: 60vh;
        margin-bottom: 12.5vh;
        width: 100%;
    }

    img {
        width: 100%;
        height: 65vh;
        margin-bottom: 5vh;
    }

    .index-content-header {
        color: white;
        opacity: 1;
        height: 5vh;
        font-weight: 800;
        font-size: 1rem;
    }

    .index-content-button {
        color: #003340;
        background-color: #A7A9AB;
        font-weight: 600;
        font-size: 1rem;
        border: none;
        width: 50%;
        border-radius: 0.5rem;
        height: 5vh;
        text-align: center;
    }

        .index-content-button:hover {
            background-color: white;
            color: #003340;
            font-weight: 600;
            font-size: 1rem;
            border: none;
            width: 50%;
            border-radius: 0.5rem;
            height: 5vh;
            text-align: center;
        }

    .index-form-login {
        width: 50%;
        margin-top: 28%;
        margin-left: 25%;
        margin-right: 25%;
        background-color: rgba(0,0,0,0.2);
        box-shadow: rgba(0, 0, 0, 0.8) 0px 5px 15px;
    }

    .index-form-register {
        width: 60%;
        margin-top: 5%;
        margin-left: 20%;
        margin-right: 20%;
        background-color: rgba(0,0,0,0.2);
        box-shadow: rgba(0, 0, 0, 0.8) 0px 5px 15px;
    }

    .index-form-heading {
        width: 100%;
        padding-top: 4vh;
        font-family: sans-serif;
        text-align: center;
        opacity: 1;
        border-radius: 0.5rem;
        margin-bottom: 5vh;
    }

    .index-form-heading-1 {
        font-size: 2rem;
        font-weight: 800;
        color: #003340;
        height: 5vh;
        margin-bottom: 3vh;
        color: #A7A9AB;
    }

    .index-form-heading-2 {
        font-size: 0.8rem;
        font-weight: 700;
        color: white;
        height: 3vh;
    }

    .index-form-heading-3 {
        font-size: 0.8rem;
        font-weight: 600;
        color: white;
        height: 5vh;
    }

    .index-form-group {
        margin-bottom: 2vh;
        width: 100%;
        display: flex;
    }

    .index-form-icon {
        font-size: 1.2rem;
        color: white;
        width: 10%;
        margin-left: 10%;
        height: 7vh;
        text-align: center;
        line-height: 7vh;
        background-color: #003340;
        border-bottom-left-radius: 0.5rem;
        border-top-left-radius: 0.5rem;
    }

    input {
        background-color: #003340;
        width: 70%;
        height: 7vh;
        font-size: 0.7rem;
        border-bottom-right-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        font-weight: 800;
        color: white;
        margin-right: 10%;
        border: none;
        padding: 1rem 1rem 1rem 1rem;
    }

        input:focus, textarea:focus, select:focus {
            outline: none;
        }

    ::placeholder {
        color: white;
        font-size: 0.7rem;
        font-weight: 900;
    }

    .forgotpassword {
        color: white;
        width: 80%;
        margin-left: 10%;
        margin-right: 10%;
        text-align: right;
        height: 3vh;
        font-size: 0.7rem;
        font-weight: 800;
        margin-bottom: 0;
        padding-bottom: 0;
        cursor: pointer;
    }

        .forgotpassword:hover {
            color: white;
            width: 80%;
            margin-left: 10%;
            margin-right: 10%;
            text-align: right;
            height: 3vh;
            font-size: 1rem;
            font-weight: 800;
            margin-bottom: 0;
            padding-bottom: 0;
            cursor: pointer;
        }

    .index-form-button {
        background-color: #A7A9AB;
        width: 100%;
        height: 7vh;
        border: none;
        border-radius: 0.5rem;
        text-align: center;
        color: #003340;
        font-size: 1rem;
        font-weight: 700;
        border: none;
    }

        .index-form-button:hover {
            background-color: white;
            color: #003340;
            width: 100%;
            height: 7vh;
            border: none;
            border-radius: 0.5rem;
            text-align: center;
            font-size: 1rem;
            font-weight: 700;
            border: none;
        }

    .index-form-or {
        text-align: center;
        height: 3vh;
        margin: 0;
        padding: 0;
    }

    .index-form-or-heading {
        font-size: 1rem;
        color: #A7A9AB;
        font-weight: 100;
    }

    .index-socialmedia-div {
        color: white;
        font-size: 1.5rem;
        width: 20%;
        height: 5vh;
        margin-top: 2vh;
        margin-left: 14%;
    }

        .index-socialmedia-div:hover {
            color: white;
            font-size: 2.5rem;
            width: 20%;
            height: 5vh;
            margin-top: 0vh;
            margin-left: 14%;
        }


    .index-form-checkbox {
        width: 10%;
        margin-left: 20%;
        height: 5vh;
        line-height: 5vh;
    }

    .index-form-checkbox-div {
        display: flex;
        height: 100%;
        width: 33%;
    }

    .index-checkbox-label {
        color: #A7A9AB;
        font-weight: 800;
        font-size: 0.8rem;
        width: 70%;
        height: 100%;
        line-height: 5vh;
    }
</style>

<div class="row index-container">
    <div class="col-xl-7 index-container-left">
        <div class="index-left-top-1">
            <h3 class="index-content-header">new to xebec?</h3>
            <button class="index-content-button" @onclick="GoToHome">Explore</button>
        </div>
        <div class="index-left-bottom">
            <img src="img/login-phone3.svg" asp-append-version="true">
        </div>
    </div>
    <div class="col-xl-5 index-container-right">
        <form class="index-form-login" hidden="@activateAccountIsHidden">
            <div class="form-group index-form-heading">
                <h1 class="index-form-heading-2">provide the key to activate your account</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-user"></i>
                </div>
                <input type="email" placeholder="email address" @bind="@Email">
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-key "></i>
                </div>
                <input type="text" placeholder="key" @bind="@Key">
            </div>
            <div class="form-group index-form-or" hidden="@wrongKeyMessageIsHidden">
                <h1 class="index-form-heading-3">incorrect key</h1>
            </div>
            <div class="form-group index-form-or" hidden="@invalidEmailMessageIsHidden">
                <h1 class="index-form-heading-3">invalid email address</h1>
            </div>
            <button type="submit" class="index-form-button" @onclick="SendKey">Submit</button>
        </form>
        <form class="index-form-login" hidden="@requestNewKeyMessageIsHidden">
            <div class="form-group index-form-heading">
                <h1 class="index-form-heading-2">enter your email and we will send you a new key</h1>
            </div>
            <div class="form-group index-form-group">
                <div class="index-form-icon">
                    <i class="fa fa-user"></i>
                </div>
                <input type="email" placeholder="email address" @bind="@Email">
            </div>
            <input type="button" class="index-form-button" @onclick="SendRequest" value="Submit" />
        </form>
    </div>
</div>


@code {

    private UserModel currUser = new UserModel();
    private MainModel mainmodel;
    private List<UserModel> users = null;
    private int user;
    private string Email = "";
    private string Key = "";
    private bool wrongKeyMessageIsHidden = true;
    private int wrongKeyCount = 0;
    private bool requestNewKeyMessageIsHidden = true;
    private bool activateAccountIsHidden = false;
    private bool notAuthorizedIsHidden = true;
    private bool invalidEmailMessageIsHidden = true;
    private bool multipleVisitsPageIsHidden = true;
    private KeyRequest request = new KeyRequest();

    protected override async Task OnInitializedAsync()
    {
        //this must happen first 
        users = await HttpClient.GetFromJsonAsync<List<UserModel>>("https://my-json-server.typicode.com/IviweMalotana/xebecDB/Users");

    }

    public void GoToHome()
    {
        navmanager.NavigateTo("/");
    }

    public bool KeyIsValid()
    {
        try
        {
            string thisKey = users.Where(x => x.ID == user).Select(x => x.Key).Single();
            wrongKeyMessageIsHidden = true;
            requestNewKeyMessageIsHidden = false;
            return true;

        }
        catch
        {
            if (wrongKeyCount < 3)
            {
                wrongKeyMessageIsHidden = false;
                wrongKeyCount++;
            }
            else if(wrongKeyCount==3)
            {
                wrongKeyMessageIsHidden = true;
                requestNewKeyMessageIsHidden = false;
                activateAccountIsHidden = true;
            }
            return false;
        }
    }

    public bool EmailIsValid()
    {
        try
        {
            user = users.Where(x => x.Email == Email).Select(x => x.ID).Single();
            invalidEmailMessageIsHidden = true;
            return true;

        }
        catch
        {
            invalidEmailMessageIsHidden = false;
            return false;
        }
    }

    public void SendKey()
    {

        // increment usermodel.LinkVisits = 1;
        //ask database when email match 
        bool validEmail = EmailIsValid();
        bool validKey = KeyIsValid();

        currUser = users.Where(x => x.ID == user).Single();

        if (validEmail && validKey)
        {
            currUser.Registered = true;
            mainmodel.ID = user;

            // DO MORE HERE 
        }
    }
    public void SendRequest()
    {
        
        request.Id = currUser.ID;
        request.Email = currUser.Email;
        request.Key = currUser.Key;
        request.Link = "https://localhost:44364/confirmation";

        HttpClient.PostAsJsonAsync("https://prod-223.westeurope.logic.azure.com:443/workflows/fa4c087fb4bc4ee6af54b07047ca6f57/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=doWY1Jeit9AC3MhFltbcskJ9J5ygBO9nZ_8BJEe5hPE", request);
    }

}
